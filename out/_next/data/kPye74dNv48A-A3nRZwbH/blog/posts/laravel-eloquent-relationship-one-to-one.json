{"pageProps":{"frontmatter":{"published":true,"title":"Laravel Eloquent - Relationship One to One","tag":"Programming","date":"January 20 2024","excerpt":"Pada artikel kali ini kita akan membahas mengenai Laravel Eloquent Relationship untuk tipe One to One atau hasOne","cover_image":"/images/posts/Laravel Eloquent - Relationship One to One.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"},"slug":"laravel-eloquent-relationship-one-to-one","content":"\r\n## Instalasi dan Setup Laravel\r\n\r\nSebelum kita memulai mempelajari Eloquent relationship, kita perlu mempunyai terlebih dahulu project Laravel nya, untuk melakukannya kita\r\nbisa install Laravel menggunakan `Laravel Installer`. Jika kalian belum mempunyai installer nya kalian bisa install menggunakan `composer`\r\ndengan perintah berikut ini:\r\n\r\n```shell\r\ncomposer global require laravel/installer\r\n```\r\n\r\nSetelah package `Laravel Installer` nya terinstall secara global, sekarang kita bisa buat project Laravel nya menggunakan perintah:\r\n\r\n> **Catatan**: Tips\r\n>\r\n> `laravel-learn-relationship` adalah nama folder atau project nya, kalian bisa gunakan nama lain jika menginginkannya\r\n\r\n```shell\r\nlaravel new laravel-learn-relationship\r\n```\r\n\r\nMaka sekarang seharusnya terdapat folder dengan nama `laravel-learn-relationship` seperti gambar dibawah ini\r\n\r\n![Laravel Folder](https://mzulkiakbari.alkaysan.co.id/images/posts/assets/laravel-eloquent/relationship-one-to-one/laravel-folder.png)\r\n\r\nSetelah folder project Laravel terinstall, kita bisa pindah atau change working directory agar berada di dalam aplikasi Laravel nya dengan perintah:\r\n\r\n```shell\r\ncd laravel-learn-relationship\r\n```\r\n\r\nSetelah itu kita bisa buka menggunakan Text Editor Visual Studio Code dengan perintah\r\n\r\n```shell\r\ncode .\r\n```\r\n\r\n### Setup Locale Faker\r\n\r\nSelanjutnya kita akan setup agar locale faker nya menggunakan data dari indonesia, untuk melakukannya kita bisa tambahkan dulu variable dengan nama `FAKER_LOCALE` di file `.env` pada bagian akhir\r\n\r\n```env\r\nFAKER_LOCALE=\"id_ID\"\r\n```\r\n\r\nSetelah membuat variable `FAKER_LOCALE` selanjutnya kita set agar konfigurasi faker nya menggunakan data dari variable `.env`, untuk melakukannya\r\nkalian bisa ubah di file `config/app.php`\r\n\r\n```php\r\n...\r\n'faker_locale' => env(\"FAKER_LOCALE\", 'en_US'),\r\n...\r\n```\r\n\r\n### Setup Clockwork\r\n\r\nSetelah men-setup locale faker, selanjutnya kita akan install package yang namanya `clockwork`, package tersebut berfungsi untuk mengecek query yang digunakan pada aplikasi Laravel kita. Untuk menginstall nya kita bisa gunakan package manager `composer` dengan perintah berikut ini:\r\n\r\n```shell\r\ncomposer require itsgoingd/clockwork\r\n```\r\n\r\nSetelah package `clockwork` terinstall, selanjutnya kita perlu menginstall juga extension versi browser nya, disini saya menggunakan web browser google chrome\r\n\r\n![Extension Browser Clockwork](https://mzulkiakbari.alkaysan.co.id/images/posts/assets/laravel-eloquent/relationship-one-to-one/extension-browser-clockwork.png)\r\n\r\nJika sudah berhasil di install, nanti extension ini akan muncul di menu developer tools nya jika kita membuka halaman yang dibuat menggunakan PHP\r\n\r\n> **Catatan**:\r\n>\r\n> Disini saya menggunakan `Laragon`, yang dimana jika terdapat project php atau Laravel yang tersimpan di folder `www` atau web server nya, maka\r\n> akan otomatis dapat dibuka atau langsung berjalan di web server nya dengan local domain `.test`, jika kalian tidak menggunakan web server,\r\n> kalian dapat menjalankan Laravel nya dengan perintah berikut ini:\r\n>\r\n> ```shell\r\n> php artisan serve\r\n> ```\r\n>\r\n> Nantinya aplikasi Laravel akan berjalan di port `8000` dengan host nya yaitu `localhost` atau ip loopback `127.0.0.1`\r\n\r\n![Devtools Clockwork](https://mzulkiakbari.alkaysan.co.id/images/posts/assets/laravel-eloquent/relationship-one-to-one/dev-tools-clockwork.png)\r\n\r\nSetelah kita melakukan setup-setup diatas, kita akan memulai membahas mengenai relationship pada Eloquent Laravel\r\n\r\n## Pendahuluan\r\n\r\nTabel database seringkali berhubungan antara satu dengan yang lainnya. Misalnya, sebuah postingan blog mungkin memiliki banyak komentar atau contoh lainnya adalah seorang user mungking terkait dengan data nomor teleponnya. Eloquent membuat pengelolaan dan penanganan relationship tersebut menjadi lebih mudah dan mendukung berbagai relationship yang umum atau common seperti:\r\n\r\n- One to One\r\n- One to Many\r\n- Many to Many\r\n- Has One Through\r\n- Has Many Through\r\n\r\n## Mendefinisikan Relationships\r\n\r\nEloquent relationships didefinisikan sebagai method pada class model Eloquent kalian. Karena relationship juga berfungsi sebagai query builders\r\nyang kuat, maka mendefinisikan relationship sebagai method akan memberikan kemampuan merangkai (chaining) method dan membuat query yang kuat.\r\nMisalnya, kita dapat merangkai atau chaining untuk memberikan batasan atau kondisi query tambahan pada sebuah relationship user dengan data nomor teleponnya:\r\n\r\n```php\r\n$user->phone()->where('active', 1)->get();\r\n```\r\n\r\n## One to One\r\n\r\nSebuah relasi one-to-one adalah tipe relationship yang sangat mendasar pada database. Misalnya, model `User` mungkin dikatikan dengan satu model `Phone`. Untuk mendefinisikan relationship tersebut, kita akan membuat sebuah method dengan nama `phone` pada model `User`. Method `phone` tersebut harus memanggil method `hasOne` dan mengembalikan nilai atau return value nya. Method `hasOne` tersebut bisa kita gunakan atau tersedia di model melalui base class `Illuminate\\Database\\Eloquent\\Model`. Agar lebih jelas atau terbayang mengenai relationship antara model `User` dengan model `Phone` tersebut kalian bisa lihat gambar dibawah ini\r\n\r\n![Design Model User and Model Phone](https://mzulkiakbari.alkaysan.co.id/images/posts/assets/laravel-eloquent/relationship-one-to-one/design-model-user-and-model-phone.png)\r\n\r\n### Mengubah Model, Migration dan Factory User\r\n\r\nDisini kita akan mencoba mengubah model, migration dan factory bawaan Laravel yaitu `User` agar sesuai dengan design model yang sudah saya buat pada gambar diatas.\r\n\r\n- Model User\r\n\r\nPertama kita akan coba ubah terlebih dahulu model user nya seperti berikut ini di file `app\\Models\\User.php`\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Models;\r\n\r\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\r\nuse Illuminate\\Database\\Eloquent\\Model;\r\n\r\nclass User extends Model\r\n{\r\n    use HasFactory;\r\n\r\n    protected $guarded = ['id'];\r\n}\r\n```\r\n\r\n- Migration User\r\n\r\nSelanjutnya kita ubah file migration atau file yang langsung merepresentasikan field-field apa saja yang ada di tabel `users` nya agar sesuai dengan design yang sudah saya buat, file migration ini berada di `database\\migrations\\2014_10_12_000000_create_users_table.php`\r\n\r\n```php\r\n<?php\r\n\r\nuse Illuminate\\Database\\Migrations\\Migration;\r\nuse Illuminate\\Database\\Schema\\Blueprint;\r\nuse Illuminate\\Support\\Facades\\Schema;\r\n\r\nreturn new class extends Migration\r\n{\r\n    public function up(): void\r\n    {\r\n        Schema::create('users', function (Blueprint $table) {\r\n            $table->id();\r\n            $table->string('name');\r\n            $table->string('username')->unique();\r\n            $table->string('email')->unique();\r\n            $table->timestamps();\r\n        });\r\n    }\r\n\r\n    public function down(): void\r\n    {\r\n        Schema::dropIfExists('users');\r\n    }\r\n};\r\n```\r\n\r\n- Factory User\r\n\r\nSekarang kita ubah kode factory atau kode yang akan membuat data dummy menggunakan faker tersebut agar sesuai dengan field yang sudah saya design, file factory tersebut berada di `database\\factories\\UserFactory.php`\r\n\r\n```php\r\n<?php\r\n\r\nnamespace Database\\Factories;\r\n\r\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\r\n\r\nclass UserFactory extends Factory\r\n{\r\n    public function definition(): array\r\n    {\r\n        return [\r\n            'name' => fake()->name(),\r\n            'username' => fake()->unique()->userName(),\r\n            'email' => fake()->unique()->safeEmail()\r\n        ];\r\n    }\r\n}\r\n```\r\n\r\n#### Membuat Seeder untuk Model User\r\n\r\nSetelah melakukan konfigurasi model, migration dan factory User selanjutnya kita akan buat file seeder tersendiri untuk model `User` tersebut. Untuk melakukannya kalian bisa jalankan perintah\r\n`php artisan` seperti berikut ini:\r\n\r\n```shell\r\nphp artisan make:seeder UserSeeder\r\n```\r\n\r\nMaka sekarang akan terbuat sebuah file seeder baru di `database\\seeders\\UserSeeder.php`, selanjutnya kita akan buat data dummy untuk model `User` dengan bantuan file `UserFactory` yang sudah kita ubah sebelumnya\r\n\r\n```php\r\n<?php\r\n\r\nnamespace Database\\Seeders;\r\n\r\nuse App\\Models\\User;\r\nuse Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents;\r\nuse Illuminate\\Database\\Seeder;\r\n\r\nclass UserSeeder extends Seeder\r\n{\r\n    public function run(): void\r\n    {\r\n        User::create([\r\n            'name' => 'Arman Dwi Pangestu',\r\n            'username' => 'devnull',\r\n            'email' => 'arman@example.net'\r\n        ]);\r\n\r\n        User::factory(4)->create();\r\n    }\r\n}\r\n```\r\n\r\nSetelah seeder nya terbuat, selanjutnya kita buat agar `UserSeeder` tersebut dijalankan ketika kita menggunakan perintah php artisan `migrate`, untuk melakukan hal tersebut kita bisa panggil class\r\n`UserSeeder` tersebut di file `database\\seeders\\DatabaseSeeder.php`\r\n\r\n```php\r\n<?php\r\n\r\nnamespace Database\\Seeders;\r\n\r\nuse Illuminate\\Database\\Seeder;\r\n\r\nclass DatabaseSeeder extends Seeder\r\n{\r\n    public function run(): void\r\n    {\r\n        $this->call([\r\n            UserSeeder::class\r\n        ]);\r\n    }\r\n}\r\n```\r\n\r\n#### Menjalankan Artisan Migrate\r\n\r\nJika semua nya sudah siap (Model, Migration, Factory dan Seeder) kita bisa eksekusi menggunakan perintah berikut ini\r\n\r\n```shell\r\nphp artisan migrate\r\n```\r\n\r\n> **Catatan**:\r\n>\r\n> Jika muncul sebuah prompt pertanyaan seperti berikut ini\r\n>\r\n> ```php\r\n>  WARN  The database 'laravel_learn_relationship' does not exist on the 'mysql' connection.\r\n>\r\n>  Would you like to create it? (yes/no) [no]\r\n> ```\r\n>\r\n> Kita bisa ketik `yes` kemudian enter.\r\n\r\n![PHP Artisan Migrate User](https://mzulkiakbari.alkaysan.co.id/images/posts/assets/laravel-eloquent/relationship-one-to-one/php-artisan-migrate-user.png)\r\n\r\nMaka sekarang seharusnya sudah terbuat sebuah tabel dengan nama `users` di database `laravel_learn_relationship` dengan isian kolom seperti berikut ini\r\n\r\n| Column     | Data Type       |\r\n| ---------- | --------------- |\r\n| id         | bigint unsigned |\r\n| name       | varchar(255)    |\r\n| username   | varchar(255)    |\r\n| email      | varchar(255)    |\r\n| created_at | timestamp       |\r\n| updated_at | timestamp       |\r\n\r\n![Database and Model User Created](https://mzulkiakbari.alkaysan.co.id/images/posts/assets/laravel-eloquent/relationship-one-to-one/database-and-model-user-created.png)\r\n\r\nSelanjutnya kita jalankan kembali perintah artisan `migrate` dengan tambahan flag atau option berikut ini\r\n\r\n```shell\r\nphp artisan migrate:fresh --seed\r\n```\r\n\r\nMaka sekarang seharusnya terbuat beberapa data dummy pada tabel `users`\r\n\r\n![Data Dummy Model User](https://mzulkiakbari.alkaysan.co.id/images/posts/assets/laravel-eloquent/relationship-one-to-one/data-dummy-model-user.png)\r\n\r\n### Model Phone\r\n\r\nSetelah model `User` siap, selanjutnya kita siapkan untuk model `Phone`, untuk membuat model, migration, factory dan seeder secara sekaligus kita bisa gunakan perintah artisan berikut ini:\r\n\r\n> **Catatan**: Tips\r\n>\r\n> flag atau option `-mfs` disini artinya adalah kita buat model sekaligus `migration`, `factory`, dan `seeder`\r\n\r\n```shell\r\nphp artisan make:model -mfs Phone\r\n```\r\n\r\nSelanjutnya kita ubah file model `Phone` nya di `app\\Models\\Phone.php`\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Models;\r\n\r\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\r\nuse Illuminate\\Database\\Eloquent\\Model;\r\n\r\nclass Phone extends Model\r\n{\r\n    use HasFactory;\r\n\r\n    protected $guarded = ['id'];\r\n}\r\n```\r\n\r\n#### Migration Phone\r\n\r\nSekarang kita sesuaikan kode migration nya agar kolom dari tabel `phones` sesuai dengan design yang sudah saya buat, file migration tersebut berada di `database\\migrations\\2024_01_20_192104_create_phones_table.php`\r\n\r\n```php\r\n<?php\r\n\r\nuse Illuminate\\Database\\Migrations\\Migration;\r\nuse Illuminate\\Database\\Schema\\Blueprint;\r\nuse Illuminate\\Support\\Facades\\Schema;\r\n\r\nreturn new class extends Migration\r\n{\r\n    public function up(): void\r\n    {\r\n        Schema::create('phones', function (Blueprint $table) {\r\n            $table->id();\r\n            $table->foreignId('user_id');\r\n            $table->string('phone', 20);\r\n            $table->timestamps();\r\n        });\r\n    }\r\n\r\n    public function down(): void\r\n    {\r\n        Schema::dropIfExists('phones');\r\n    }\r\n};\r\n```\r\n\r\n#### Factory Phone\r\n\r\nSelanjutnya kita siapkan data dummy untuk model `Phone` tersebut menggunakan faker di file factory `database\\factory\\PhoneFactory.php`\r\n\r\n```php\r\n<?php\r\n\r\nnamespace Database\\Factories;\r\n\r\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\r\n\r\nclass PhoneFactory extends Factory\r\n{\r\n    public function definition(): array\r\n    {\r\n        $user_id = [1, 2, 3, 4, 5];\r\n        return [\r\n            'user_id' => fake()->unique()->randomElement($user_id),\r\n            'phone' => fake()->phoneNumber()\r\n        ];\r\n    }\r\n}\r\n```\r\n\r\n#### Seeder Phone\r\n\r\nSetelah Factory faker nya sudah siap, sekarang kita eksekusi pembuatan data dummy nya di file `database\\seeders\\PhoneSeeder.php`\r\n\r\n```php\r\n<?php\r\n\r\nnamespace Database\\Seeders;\r\n\r\nuse App\\Models\\Phone;\r\nuse Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents;\r\nuse Illuminate\\Database\\Seeder;\r\n\r\nclass PhoneSeeder extends Seeder\r\n{\r\n    public function run(): void\r\n    {\r\n        Phone::factory(5)->create();\r\n    }\r\n}\r\n```\r\n\r\nJangan lupa kita panggil class `PhoneSeeder` tersebut di file `database\\seeders\\DatabaseSeeder.php`\r\n\r\n```php\r\n<?php\r\n\r\nnamespace Database\\Seeders;\r\n\r\nuse Illuminate\\Database\\Seeder;\r\n\r\nclass DatabaseSeeder extends Seeder\r\n{\r\n    public function run(): void\r\n    {\r\n        $this->call([\r\n            UserSeeder::class,\r\n            PhoneSeeder::class\r\n        ]);\r\n    }\r\n}\r\n```\r\n\r\nSetelah semuanya siap, sekarang kita jalankan migrate lagi\r\n\r\n```shell\r\nphp artisan migrate:fresh --seed\r\n```\r\n\r\nMaka sekarang seharusnya sudah terbuat sebuah tabel baru dengan nama `phones` di database dengan isian kolom dan data seperti berikut ini\r\n\r\n| Column     | Data Type       |\r\n| ---------- | --------------- |\r\n| id         | bigint unsigned |\r\n| user_id    | bigint unsigned |\r\n| phone      | varchar(20)     |\r\n| created_at | timestamp       |\r\n| updated_at | timestamp       |\r\n\r\n![Table Phones With Data Dummy](https://mzulkiakbari.alkaysan.co.id/images/posts/assets/laravel-eloquent/relationship-one-to-one/table-phones-with-data-dummy.png)\r\n\r\n### Membuat Method hasOne\r\n\r\nSetelah kita siapkan model, migration, factory dan seeder untuk `User` dan `Phone`. Sekarang kita akan membuat method `hasOne` di model `User` agar membuat sebuah relationship one-to-one\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Models;\r\n\r\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\r\nuse Illuminate\\Database\\Eloquent\\Model;\r\nuse Illuminate\\Database\\Eloquent\\Relations\\HasOne;\r\n\r\nclass User extends Model\r\n{\r\n    use HasFactory;\r\n\r\n    protected $guarded = ['id'];\r\n\r\n    public function phone(): HasOne\r\n    {\r\n        return $this->hasOne(Phone::class);\r\n    }\r\n}\r\n```\r\n\r\nArgument pertama yang dikirimkan di method `hasOne` adalah nama class model yang terkait dengan relation nya. Setelah relationship ditentukan, sekarang kita dapat mengambil data terkait menggunakan\r\ndynamic property atau variable Eloquent. Dynamic property ini memungkinkan kalian mengakses relationship method yang sudah dibuat di model `User`.\r\n\r\n#### Mengakses atau Menjalankan Relation One to One\r\n\r\nUntuk mencoba nya kalian bisa menggunakan `tinker` dengan cara masuk terlebih dahulu kedalam shell nya dengan perintah berikut ini\r\n\r\n```shell\r\nphp artisan tinker\r\n```\r\n\r\nJika sudah didalam shell nya, sekarang kita bisa buat sebuah variable dengan nama `phone` yang value nya adalah model `User` men-chaining method relationship atau dynamic property nya\r\n\r\n> **Catatan**: Tips\r\n>\r\n> Nama dari dynamic property Eloquent `phone` berikut ini adalah merepresetasikan nama method relationship yang ada di model `User`\r\n\r\n```php\r\n$phone = User::find(1)->phone\r\n```\r\n\r\nMaka seharusnya perintah diatas tersebut akan me-return value data nomor telepon yang terkait dengan user nya\r\n\r\n```php\r\n[!] Aliasing 'User' to 'App\\Models\\User' for this Tinker session.\r\n= App\\Models\\Phone {#6033\r\n    id: 5,\r\n    user_id: 1,\r\n    phone: \"(+62) 301 8577 592\",\r\n    created_at: \"2024-01-20 19:32:51\",\r\n    updated_at: \"2024-01-20 19:32:51\",\r\n  }\r\n```\r\n\r\n![Tinker Get Phone User](https://mzulkiakbari.alkaysan.co.id/images/posts/assets/laravel-eloquent/relationship-one-to-one/tinker-get-phone-user.png)\r\n\r\n### Format atau Aturan Penulisan\r\n\r\n#### Foreign Key\r\n\r\nEloquent menentukan `foreign key` pada suatu relationship berdasarkan sesuai dengan nama parent atau induk model nya. Pada kasus ini, model `Phone` secara otomatis `diasumsikan` memiliki\r\nsebuah column untuk menampung foreign key dengan nama `user_id`. Jika kalian ingin mengesampikan aturan ini, kalian dapat menambahkan nama custom column foreign key pada argument kedua di\r\nmethod `hasOne` nya:\r\n\r\n```php\r\npublic function phone(): HasOne\r\n{\r\n    return $this->hasOne(Phone::class, 'foreign_key');\r\n}\r\n```\r\n\r\n#### Primary Key\r\n\r\nSelain hal tersebut, Eloquent juga berasumsi bahwa `foreign key` tersebut harus memiliki nilai yang cocok atau sama dengan column `primary key` di parent atau induk model nya. Dengan kata lain,\r\nEloquent akan mencari nilai user id (foreign key) pada column `user_id` di data `Phone` kemudian membadingkannya dengan nilai user id (primary key) pada column `id` di data `User` nya.\r\nJika kalian ingin relationship tersebut menggunakan nilai `primary key` selain column `id` atau property `$primaryKey` pada model, kalian bisa menambahkan nama custom column primary key pada argument ketiga di method `hasOne` nya:\r\n\r\n```php\r\npublic function phone(): HasOne\r\n{\r\n    return $this->hasOne(Phone::class, 'foreign_key', 'local_key');\r\n}\r\n```\r\n\r\n## Inverse Relationship\r\n\r\nSetelah mendefinisikan relationship `hasOne` atau `One to One` dari model `User` ke model `Phone`, maka kita sekarang dapat mengkases model `Phone` secara langsung dari model `User` dengan\r\ncara men-chaining method `phone` pada instance `User`. Selanjutnya, kita akan tentukan relationship pada model `Phone` ke model `User` atau invers (kebalikan) relationship yang memungkinkan kita dapat mengakses data user yang memiliki nomor telepon. Kita dapat mendefinisikan invers relationship dari method `hasOne` dengan menggunakan method `belongsTo`.\r\n\r\nAgar lebih terbayang, kalian bisa lihat gambar dibawah ini mengenai relationship `hasOne` dari model `User` ke model `Phone` dan `belongsTo` (inverse) dari model `Phone` ke model `User`\r\n\r\n![Invers Relation Design](https://mzulkiakbari.alkaysan.co.id/images/posts/assets/laravel-eloquent/relationship-one-to-one/invers-relation-design.png)\r\n\r\n### Membuat Method belongsTo\r\n\r\nUntuk membuat inverse relation nya, kita perlu membuat sebuah method dengan nama `user` di model `Phone`. Method `user` tersebut harus memanggil method `belongsTo` dan mengembalikan nilai atau return value nya.\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Models;\r\n\r\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\r\nuse Illuminate\\Database\\Eloquent\\Model;\r\nuse Illuminate\\Database\\Eloquent\\Relations\\BelongsTo;\r\n\r\nclass Phone extends Model\r\n{\r\n    use HasFactory;\r\n\r\n    protected $guarded = ['id'];\r\n\r\n    public function user(): BelongsTo\r\n    {\r\n        return $this->belongsTo(User::class);\r\n    }\r\n}\r\n```\r\n\r\nSaat memanggil method `user`, Eloquent akan berusaha menemukan model `User` yang memiliki id yang cocok dengan column `user_id` pada model `Phone`.\r\n\r\nEloquent menentukan nama `foreign key` dengan memeriksa nama method relationship nya dan menambahkan nama akhiran atau suffix method dengan format `_id`. Jadi, dalam hal ini, Eloquent `mengasumsikan` bahwa model `Phone` memiliki column `user_id`. Namun, jika nama column `foreign key` di model `Phone` bukan `user_id`, kalian dapat menambahkan argument kedua di method `belongsTo`\r\n\r\n```php\r\npublic function user(): BelongsTo\r\n{\r\n    return $this->belongsTo(User::class, 'foreign_key');\r\n}\r\n```\r\n\r\nJika parent atau induk model tidak menggunakan column `id` sebagai `primary key` nya, atau mungkin kalian ingin mencari model terkait menggunakan column yang berbeda, Anda dapat menambahkan argument ketiga di method `belongsTo` untuk menentukan nama custom key column di parent atau induk model nya\r\n\r\n```php\r\npublic function user(): BelongsTo\r\n{\r\n    return $this->belongsTo(User::class, 'foreign_key', 'owner_key');\r\n}\r\n```\r\n\r\n#### Mengakses atau Menjalankan Relation belongsTo\r\n\r\nUntuk mencoba nya kalian bisa gunakan `tinker` kembali, namun kita perlu me-restart session shell nya agar terupdate, kalian bisa exit terlebih dahulu dari session nya kemudian masuk kembali menggunakan perintah artisan\r\n\r\n```shell\r\nphp artisan tinker\r\n```\r\n\r\nJika sudah didalam shell nya, sekarang kita bisa buat sebuah variable dengan nama `user` yang value nya adalah model `Phone` men-chaining method relationship atau dynamic property nya\r\n\r\n> **Catatan**: Tips\r\n>\r\n> Nama dari dynamic property Eloquent `user` berikut ini adalah merepresetasikan nama method relationship yang ada di model `Phone`\r\n\r\n```php\r\n$user = App\\Models\\Phone::find(1)->user\r\n```\r\n\r\nMaka seharusnya perintah diatas akan me-return value data user yang terkait dengan nomor telepon nya\r\n\r\n```php\r\n= App\\Models\\User {#6031\r\n    id: 1,\r\n    name: \"Arman Dwi Pangestu\",\r\n    username: \"devnull\",\r\n    email: \"arman@example.net\",\r\n    created_at: \"2024-01-20 19:32:51\",\r\n    updated_at: \"2024-01-20 19:32:51\",\r\n  }\r\n```\r\n\r\n![Tinker Get User Phone](https://mzulkiakbari.alkaysan.co.id/images/posts/assets/laravel-eloquent/relationship-one-to-one/tinker-get-user-phone.png)\r\n\r\n## Membuat Eloquent Relationship Agar Dapat Diakses Melalui Web\r\n\r\nUntuk membuat agar Eloquent Relationship yang sudah kita buat sebelumnya dapat diakses melalui web, kita bisa buat sebuah controller baru dengan nama `RelationController`. Untuk membuat nya kita bisa gunakan perintah php artisan berikut ini\r\n\r\n```shell\r\nphp artisan make:controller RelationController\r\n```\r\n\r\nSelanjutnya kita buat sebuah method untuk menangani route yang akan kita tentukan sesuai dengan relationship yang sudah kita buat, untuk melakukannya kita bisa buat method tersebut di file `app\\Models\\Http\\Controllers\\RelationController.php`\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Http\\Controllers;\r\n\r\nuse App\\Models\\Phone;\r\nuse App\\Models\\User;\r\nuse Illuminate\\Http\\Request;\r\n\r\nclass RelationController extends Controller\r\n{\r\n    public function oneToOne(Request $request)\r\n    {\r\n        $phone = User::find($request->id)->phone;\r\n        return $phone;\r\n    }\r\n\r\n    public function oneToOneInverse(Request $request)\r\n    {\r\n        $user = Phone::find($request->id)->user;\r\n        return $user;\r\n    }\r\n}\r\n```\r\n\r\nSetelah controller nya siap, sekarang kita tinggal routing agar method di controller tersebut dapat digunakan, untuk melakukannya kita bisa tambahkan route di file `routes\\web.php`\r\n\r\n```php\r\n<?php\r\n\r\nuse App\\Http\\Controllers\\RelationController;\r\nuse Illuminate\\Support\\Facades\\Route;\r\n\r\nRoute::get('/', function () {\r\n    return view('welcome');\r\n});\r\n\r\nRoute::get('/relation/oneToOne', [RelationController::class, 'oneToOne']);\r\nRoute::get('/relation/oneToOneInverse', [RelationController::class, 'oneToOneInverse']);\r\n```\r\n\r\nMaka sekarang kita bisa langsung mengakses method relationship `hasOne` atau `One to One` dan `belongsTo` atau `Invers One to One` tersebut melalui web dengan syarat kita mengirimkan request `id` di alamat URL nya.\r\n\r\n![Eloquent Relationship Via Web](https://mzulkiakbari.alkaysan.co.id/images/posts/assets/laravel-eloquent/relationship-one-to-one/eloquent-relationship-via-web.png)\r\n\r\n### Kelebihan Akses Melalui Web\r\n\r\nNah berhubung sekarang kita bisa mengakses response dari relationship nya melalui web, maka kita bisa intip raw query SQL yang dijalankan nya itu seperti apa sih dengan menggunakan clockwork\r\n\r\n![Clockwork See Query](https://mzulkiakbari.alkaysan.co.id/images/posts/assets/laravel-eloquent/relationship-one-to-one/clockwork-see-query.png)\r\n","posts":[{"slug":"cloud-run-github-actions","frontmatter":{"published":true,"title":"Cloud Run - Implementasi DevOps CI/CD Pipeline Menggunakan GitHub Actions","tag":"DevOps","date":"May 06 2024","excerpt":"Pada artikel ini kita akan melakukan deployment simpel app Express.js menggunakan Cloud Run dan meng-implementasikan CI/CD Pipeline menggunakan GitHub Actions","cover_image":"/images/posts/Cloud Run - Implementasi DevOps CI CD Pipeline Menggunakan GitHub Actions.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"terraform-otomatisasi-deployment-infastructure-menggunakan-terraform","frontmatter":{"published":true,"title":"Terraform - Otomatisasi Deployment Infrastructure Menggunakan Terraform","tag":"Cloud","date":"April 01 2024","excerpt":"Pada pembahasan kali ini saya akan mencoba menggunakan Terraform untuk mendeploy infrastructure pada Google Cloud Platform (GCP)","cover_image":"/images/posts/Terraform - Otomatisasi Deployment Infrastructure Menggunakan Terraform.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"tutorial-docker-instalasi-windows-11","frontmatter":{"published":false,"title":"Tutorial Docker - Instalasi Windows 11","tag":"SysAdmin","date":"February 17 2024","excerpt":"Test Thumbnail","cover_image":"/images/posts/Tutorial Docker - Instalasi Windows 11.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"vmware-workstation-player-instalasi-linux-debian","frontmatter":{"published":true,"title":"VMware Workstation Player - Instalasi Linux Debian","tag":"SysAdmin","date":"February 17 2024","excerpt":"Pada artikel kali ini kita akan mencoba melakukan instalasi Linux Debian pada Virtual Machine yang sudah dibuat pada pembahasan sebelumnya.","cover_image":"/images/posts/VMware Workstation Player - Instalasi Linux Debian.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"vmware-workstation-player-membuat-virtual-machine","frontmatter":{"published":true,"title":"VMware Workstation Player - Membuat Virtual Machine (VM)","tag":"SysAdmin","date":"February 17 2024","excerpt":"Pada artikel kali ini kita akan mencoba membuat sebuah Virtual Machine dengan sistem operasi Linux dengan distro nya adalah Debian pada VMware Workstation Player","cover_image":"/images/posts/VMware Workstation Player - Membuat Virtual Machine.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"vmware-workstation-player-instalasi-di-windows11","frontmatter":{"published":true,"title":"VMware Workstation Player - Instalasi di Windows 11","tag":"SysAdmin","date":"February 8 2024","excerpt":"Pada artikel kali ini kita akan mencoba menginstall VMware Workstation Player pada sistem operasi Windows 11","cover_image":"/images/posts/VMware Workstation Player - Instalasi di Windows 11.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel-eloquent-relationship-has-one-through","frontmatter":{"published":false,"title":"Laravel Eloquent - Relationship Has One Through","tag":"Programming","date":"February 4 2024","excerpt":"Pada artikel kali ini kita akan membahas mengenai Laravel Eloquent Relationship Has One Through","cover_image":"/images/posts/Laravel Eloquent - Relationship Has One Through.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel-eloquent-relationship-advanced-has-one-of-many","frontmatter":{"published":true,"title":"Laravel Eloquent - Relationship Advanced Has One of Many","tag":"Programming","date":"January 30 2024","excerpt":"Pada artikel kali ini kita akan membahas mengenai Laravel Eloquent Relationship Advanced Has One of Many","cover_image":"/images/posts/Laravel Eloquent - Relationship Advanced Has One of Many.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel-eloquent-relationship-has-one-of-many","frontmatter":{"published":true,"title":"Laravel Eloquent - Relationship Has One of Many","tag":"Programming","date":"January 28 2024","excerpt":"Pada artikel kali ini kita akan membahas mengenai Laravel Eloquent Relationship Has One of Many","cover_image":"/images/posts/Laravel Eloquent - Relationship Has One of Many.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel-eloquent-relationship-where-belongs-to","frontmatter":{"published":true,"title":"Laravel Eloquent - Relationship Where Belongs To","tag":"Programming","date":"January 24 2024","excerpt":"Pada artikel kali ini kita akan membahas mengenai Laravel Eloquent Relationship Where Belongs To","cover_image":"/images/posts/Laravel Eloquent - Relationship Where Belongs To.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel-eloquent-relationship-default-models","frontmatter":{"published":true,"title":"Laravel Eloquent - Relationship Default Models","tag":"Programming","date":"January 22 2024","excerpt":"Pada artikel kali ini kita akan membahas mengenai Laravel Eloquent Relationship Default Models","cover_image":"/images/posts/Laravel Eloquent - Relationship Default Models.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel-eloquent-relationship-one-to-many","frontmatter":{"published":true,"title":"Laravel Eloquent - Relationship One to Many","tag":"Programming","date":"January 22 2024","excerpt":"Pada artikel kali ini kita akan membahas mengenai Laravel Eloquent Relationship untuk tipe One to Many atau hasMany","cover_image":"/images/posts/Laravel Eloquent - Relationship One to Many.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel-eloquent-relationship-one-to-one","frontmatter":{"published":true,"title":"Laravel Eloquent - Relationship One to One","tag":"Programming","date":"January 20 2024","excerpt":"Pada artikel kali ini kita akan membahas mengenai Laravel Eloquent Relationship untuk tipe One to One atau hasOne","cover_image":"/images/posts/Laravel Eloquent - Relationship One to One.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-authorization","frontmatter":{"published":true,"title":"Laravel 8 - #23 - Authorization","tag":"Programming","date":"January 7 2024","excerpt":"Pada pembahasan kali ini, kita akan membuat feature terakhir dari sistem blog kita, feature tersebut yaitu Authorization atau Otorisasi, setelah sebelumnya kita sudah membuat feature Autentikasi untuk login dan registrasi, sekarang kita akan membuat agar user yang tadi sudah berhasil registrasi dan juga login itu memiliki peran yang berbeda. Contohnya adalah terdapat user biasa dan juga user administrator.","cover_image":"/images/posts/Laravel 8 - Authorization.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-preview-update-dan-delete-image","frontmatter":{"published":true,"title":"Laravel 8 - #22 - Preview, Update dan Delete Image","tag":"Programming","date":"January 6 2024","excerpt":"Pada pembahasan kali ini kita akan melanjutkan feature pengelolaan gambar pada blog post kita sebelumnya, kali ini kita akan menerapkan 3 buah feature, yaitu preview, update dan delete image.","cover_image":"/images/posts/Laravel 8 - Preview, Update dan Delete Image.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-upload-image","frontmatter":{"published":true,"title":"Laravel 8 - #21 - Upload Image","tag":"Programming","date":"January 6 2024","excerpt":"Pada pembahasan kali ini kita akan mencoba menambahkan sebuah feature untuk melengkapi CRUD dari blog kita, yaitu menambahkan feature upload gambar yang dimana nantinya user dapat mengupload gambar sendiri dari komputer nya untuk menggantikan gambar yang sebelumnya kita ambil dari API nya Unsplash.","cover_image":"/images/posts/Laravel 8 - Upload Image.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-update-dan-delete-post","frontmatter":{"published":true,"title":"Laravel 8 - #20 - Update dan Delete Post","tag":"Programming","date":"January 4 2024","excerpt":"Pada pembahasan kali ini kita akan melengkapi aplikasi blog sederhana kita, setelah sebelumnya kita berhasil menambahkan feature CREATE dan READ data, kali ini kita akan melengkapi lagi dengan menambahkan feature UPDATE dan DELETE, sehingga feature CRUD nya sudah bisa dijalankan semua.","cover_image":"/images/posts/Laravel 8 - Update dan Delete Post.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-validation-dan-insert-post","frontmatter":{"published":true,"title":"Laravel 8 - #19 - Validation dan Insert Post","tag":"Programming","date":"January 4 2024","excerpt":"Setelah sebelumnya kita berhasil membuat sebuah form untuk create blog post kita, pada pembahasan kali ini kita akan mencoba untuk melengkapi nya dengan feature validasi pada form nya dan insert kedalam databasenya.","cover_image":"/images/posts/Laravel 8 - Validation dan Insert Post.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-create-post-form","frontmatter":{"published":true,"title":"Laravel 8 - #18 - Create Post Form","tag":"Programming","date":"January 3 2024","excerpt":"Kali ini kita akan melanjutkan kembali pembuatan feature CRUD pada aplikasi sistem blog sederhana kita, setelah sebelumnya kita berhasil membuat tampilan UI untuk bagian Dashboard kita sambil juga menampilkan data post dari user yang sudah berhasil login, feature tersebut sebetulnya sudah masuk kedalam CRUD yaitu bagian READ nya. Nah, sekarang tersisa 3 lagi yaitu CREATE, UPDATE dan DELETE.","cover_image":"/images/posts/Laravel 8 - Create Post Form.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-dashboard-ui","frontmatter":{"published":true,"title":"Laravel 8 - #17 - Dashboard UI","tag":"Programming","date":"January 2 2024","excerpt":"Setelah sebelumya kita sudah berhasil menambahkan feature login dan registrasi pada aplikasi blog sistem kita. Kali ini kita akan masuk kedalam dashboard dalam aplikasi kita, dimana nantinya kita bisa menambahkan feature pengelolaan postingan kita atau blog post kita seperti menambah, melihat detail, mengubah dan menghapus atau istilah nya disebut dengan CRUD (Create, Read, Update dan Delete) Operation.","cover_image":"/images/posts/Laravel 8 - Dashboard UI.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-user-login-dan-middleware","frontmatter":{"published":true,"title":"Laravel 8 - #16 - User Login dan Middleware","tag":"Programming","date":"January 1 2024","excerpt":"Pada pembahasan kali ini kita akan melanjutkan pembahasan mengenai aplikasi blog kita, setelah sebelumnya kita berhasil membuat feature registrasi untuk user kita. Nah, sekarang saatnya kita akan membuat dan meng-aplikasikan feature login nya, sehingga nantinya user yang berhasil registrasi itu bisa masuk kedalam aplikasi kita. Selain kita membuat feature login, kita juga akan sambil mempelajari featrue `middleware` yang ada didalam Laravel.","cover_image":"/images/posts/Laravel 8 - User Login dan Middleware.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-user-registration","frontmatter":{"published":true,"title":"Laravel 8 - #15 - User Registration","tag":"Programming","date":"December 31 2023","excerpt":"Pada pembahasan kali ini kita akan membuat feature registrasi untuk aplikasi blog laravel kita.","cover_image":"/images/posts/Laravel 8 - User Registration.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-view-login-dan-registration","frontmatter":{"published":true,"title":"Laravel 8 - #14 - View Login dan Registration","tag":"Programming","date":"December 31 2023","excerpt":"Pada pembahasan kali ini kita akan membuat view untuk feature login dan registration. Seperti biasa disini kita akan menggunakan bantuan framework frontend yaitu Bootstrap untuk bagian komponen nya.","cover_image":"/images/posts/Laravel 8 - View Login dan Registration.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-searching-dan-pagination","frontmatter":{"published":true,"title":"Laravel 8 - #13 - Searching dan Pagination","tag":"Programming","date":"December 30 2023","excerpt":"Pada pembahasan kali ini kita akan menambahkan 2 feature keren kedalam aplikasi blog kita yaitu Searching dan Pagination.","cover_image":"/images/posts/Laravel 8 - Searching dan Pagination.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-redesign-ui","frontmatter":{"published":true,"title":"Laravel 8 - #12 - Redesign UI","tag":"Programming","date":"December 29 2023","excerpt":"Pada pembahasan kali ini kita akan istirahat terlebih dahulu untuk mempelajari feature-feature utama yang ada didalam Laravel. Pada pembahasan kali ini kita akan mencoba memperbaiki tampilan halaman web blog kita agar lebih fresh lagi dan lebih mudah untuk digunakan.","cover_image":"/images/posts/Laravel 8 - Redesign UI.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-n1-problem","frontmatter":{"published":true,"title":"Laravel 8 - #11 - N+1 Problem","tag":"Programming","date":"December 28 2023","excerpt":"Pada pembahasan kali ini kita akan membahas sesuatu problem pada query database kita yang sangat berpengaruh terhadap performa aplikasi. Problem tersebut dinamakan N+1 Problem","cover_image":"/images/posts/Laravel 8 - N1 Problem.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-factory-dan-faker","frontmatter":{"published":true,"title":"Laravel 8 - #10 - Factory dan Faker","tag":"Programming","date":"December 27 2023","excerpt":"Pada pembahasan kali ini kita akan membahas sesuatu yang tidak kalah menarik yaitu Factory dan Faker pada Laravel, feature tersebut akan sangat berguna jika kita sedang mendevelop sesuatu yang berhubungan dengan dummy data.","cover_image":"/images/posts/Laravel 8 - Factory dan Faker.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-database-seeder","frontmatter":{"published":true,"title":"Laravel 8 - #9 - Database Seeder","tag":"Programming","date":"December 26 2023","excerpt":"Pada pembahasan kali ini kita akan membahas sesuatu feature yang tidak kalah keren pada Laravel yaitu Seeder","cover_image":"/images/posts/Laravel 8 - Database Seeder.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-post-category-dan-eloquent-relationship","frontmatter":{"published":true,"title":"Laravel 8 - #8 - Post Category dan Eloquent Relationship","tag":"Programming","date":"December 25 2023","excerpt":"Pada pembahasan kali ini kita akan membahas sesuatu yang sangat menarik yaitu mengenai keterhubungan antar tabel atau didalam Laravel itu disebut nya dengan `Eloquent Relationship` (bagaimana hubungan antar model). Sehingga nantinya pada studi kasus sistem blog kita akan menerapkan sebuah category pada setiap post di blog kita.","cover_image":"/images/posts/Laravel 8 - Post Category dan Eloquent Relationship.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-post-model-dan-route-model-binding","frontmatter":{"published":true,"title":"Laravel 8 - #7 - Post Model dan Route Model Binding","tag":"Programming","date":"December 24 2023","excerpt":"Pada pembahasan kali ini kita akan membahas kembali mengenai model didalam Laravel, yang dimana akan kita perbaiki model `Post` kita yang sebelumnya dibuat secara manual, kali ini kita akan coba buat agar model nya dengan cara yang benar yaitu dengan merepresentasikan class model nya sebagai tabel didalam database. Hal tersebut nantinya kita juga harus membuat sebuah migrasi untuk tabel Post tersebut.","cover_image":"/images/posts/Laravel 8 - Post Model dan Route Model Binding.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-database-migration-dan-eloquent","frontmatter":{"published":true,"title":"Laravel 8 - #6 - Database, Migration dan Eloquent","tag":"Programming","date":"December 23 2023","excerpt":"Laravel, sebagai salah satu framework PHP yang paling populer, menyediakan pendekatan yang kuat dan efisien dalam mengelola basis data. Dalam artikel ini, kita akan menjelajahi aspek-aspek kunci terkait database di Laravel, dengan penekanan khusus pada konsep migrasi (migration) dan Eloquent, sistem ORM bawaan Laravel.","cover_image":"/images/posts/Laravel 8 - Database, Migration dan Eloquent.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-model-collection-dan-controller","frontmatter":{"published":true,"title":"Laravel 8 - #5 - Model, Collection dan Controller","tag":"Programming","date":"December 22 2023","excerpt":"Aplikasi yang sudah dibangun sebelumnya itu semua proses nya masih ditangani komponen `routes` kita, contohnya ketika kita melakukan request ke halaman `/posts` untuk menampilkan semua data dari blog post kita dilakukan di dalam routes, begitu pula dengan proses menampilkan halaman views, itu juga dilakukan di dalam routes. Hal tersebut tidak tepat, karena jika kita ingin menerapkan konsep MVC (Model, View, Controller) maka 2 proses tersebut seharusnya kita pisahkan sesuai dengan komponen nya.","cover_image":"/images/posts/Laravel 8 - Model, Collection dan Controller.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-blade-templating-engine","frontmatter":{"published":true,"title":"Laravel 8 - #4 - Blade Templating Engine","tag":"Programming","date":"December 21 2023","excerpt":"Templating Engine adalah sebuah fitur atau tools untuk membantu kita dalam mengelola tampilan halaman web, khususnya untuk sebuah framework dan untuk framework laravel, templating engine nya dinamakan dengan Blade.","cover_image":"/images/posts/Laravel 8 - Blade Templating Engine.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-struktur-folder-routes-dan-view","frontmatter":{"published":true,"title":"Laravel 8 - #3 - Struktur Folder, Routes dan View","tag":"Programming","date":"December 21 2023","excerpt":"Bagaimana struktur folder, routes dan view pada aplikasi Laravel?","cover_image":"/images/posts/Laravel 8 - Struktur Folder, Routes dan View.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-instalasi-dan-konfigurasi","frontmatter":{"published":true,"title":"Laravel 8 - #2 - Instalasi dan Konfigurasi","tag":"Programming","date":"December 20 2023","excerpt":"Bagaimana cara instalasi dan konfigurasi Laravel pada sistem operasi Windows, macOS dan Linux?","cover_image":"/images/posts/Laravel 8 - Instalasi dan Konfigurasi.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-apa-itu-laravel","frontmatter":{"published":true,"title":"Laravel 8 - #1 - Apa itu Laravel?","tag":"Programming","date":"December 19 2023","excerpt":"Introduction Laravel 8, apa sih Laravel itu? Apa itu Web Application Framework? Siapa pembuat Laravel? Tujuan Laravel dibuat?","cover_image":"/images/posts/Laravel 8 - Apa itu Laravel.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"git-&-github-menambahkan-ssh-key","frontmatter":{"published":true,"title":"Git & GitHub - Menambahkan SSH Key","tag":"Git","date":"October 31 2023","excerpt":"GitHub saat ini wajib menggunakan SSH Public atau Private keypair untuk melakukan autentikasi dari local (git) ke remote (github), oleh karena itu pada artikel kali ini saya akan membahas bagaimana cara generate SSH key nya.","cover_image":"/images/posts/Git Github - SSH key.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"cloud-computing","frontmatter":{"published":false,"title":"Testing Heading","tag":"Cloud","date":"October 29 2023","excerpt":"Ini adalah testing heading","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"test","frontmatter":{"published":false,"title":"Testing Heading","tag":"Programming","date":"October 29 2023","excerpt":"Ini adalah testing heading","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"typescript-belajar-typescript","frontmatter":{"published":true,"title":"TypeScript - Belajar TypeScript","tag":"Programming","date":"October 16 2023","excerpt":"Pada artikel kali ini, saya akan membahas mengenai typescript","cover_image":"/images/posts/TypeScript - Belajar TypeScript.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"css-belajar-css","frontmatter":{"published":false,"title":"CSS - Belajar CSS","tag":"Programming","date":"October 10 2023","excerpt":"Pada artikel ini Saya akan membahas mengenai CSS seperti anatomi, penempatan dan lainnya","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"sistem-basis-data-1","frontmatter":{"published":false,"title":"Sistem Basis Data - 1","tag":"Programming","date":"October 6 2023","excerpt":"Pada artikel kali ini, saya akan membuat series untuk membahas mengenai Sistem Basis Data","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"cacti-install-cacti-di-ubuntu-server","frontmatter":{"published":true,"title":"Cacti - Instalasi dan Konfigurasi Monitoring Traffic Menggunakan Cacti di Ubuntu Server","tag":"SysAdmin","date":"August 30 2023","excerpt":"Pada artikel ini saya akan melakukan instalasi dan konfigurasi cacti pada sistem operasi Ubuntu Server 22.04","cover_image":"/images/posts/Cacti - Install Cacti di Ubuntu.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"ubuntu-instalasi-dan-konfigurasi-lemp-stack","frontmatter":{"published":false,"title":"Ubuntu - Instalasi dan Konfigurasi LEMP Stack","tag":"Linux","date":"August 30 2023","excerpt":"Pada artikel ini saya akan melakukan instalasi dan konfigurasi LEMP atau Linux, Nginx, MariaDB, dan PHP pada sistem operasi Ubuntu Server 22.04","cover_image":"/images/posts/Ubuntu - Instalasi dan Konfigurasi LEMP Stack.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"monitoring-instalasi-dan-konfigurasi-monitoring-server-menggunakan-grafana-dan-prometheus","frontmatter":{"published":true,"title":"Monitoring - Instalasi dan Konfigurasi Monitoring Server Menggunakan Grafana dan Prometheus","tag":"SysAdmin","date":"August 25 2023","excerpt":"Pada artikel ini saya akan melakukan instalasi dan konfigurasi untuk monitoring server menggunakan Grafana dan Prometheus","cover_image":"/images/posts/Monitoring - Grafana dan Prometheus.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"email-instalasi-dan-konfigurasi-mail-server-dengan-postfix-dovecot-roundcube","frontmatter":{"published":true,"title":"Email - Instalasi dan Konfigurasi Mail Server dengan Postfix, Dovecot dan Roundcube","tag":"SysAdmin","date":"August 23 2023","excerpt":"Pada artikel ini saya akan melakukan instalasi dan konfigurasi untuk mail server menggunakan Postfix, Dovecot dan Roundcube","cover_image":"/images/posts/Email - Instalasi dan Konfigurasi Mail Server dengan Postfix Dovecot dan Roundcube.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"protokol-email-yang-perlu-diketahui","frontmatter":{"published":true,"title":"Email - Protokol Email Yang Wajib Diketahui","tag":"SysAdmin","date":"August 15 2023","excerpt":"Pada artikel ini kita akan membahas protokol email apa saja yang wajib diketahui","cover_image":"/images/posts/Email - Protokol Email Yang Wajib Diketahui.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"powerdns-authoritative-server-sebagai-recursor-untuk-client-dan-melayani-public-domain","frontmatter":{"published":true,"title":"PowerDNS - Authoritative Server Sebagai Recursor Untuk Client dan Melayani Public Domains","tag":"SysAdmin","date":"August 01 2023","excerpt":"Pada artikel ini saya akan melakukan konfigurasi DNS Server (PowerDNS) Authoritative Server agar berfungsi sebagai recursor untuk client dan sekaligus melayani public domains","cover_image":"/images/posts/PowerDNS - Authoritative As Recursor for Clients and serving public domains.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"domain-pointing-ke-vps","frontmatter":{"published":true,"title":"Domain - Pointing ke VPS","tag":"SysAdmin","date":"July 21 2023","excerpt":"Pada artikel ini saya akan melakukan konfigurasi domain dari registrar agar mengarah ke VPS","cover_image":"/images/posts/Domain - Pointing ke VPS.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"powerdns-master-dan-slave","frontmatter":{"published":true,"title":"PowerDNS - Konfigurasi Master dan Slave","tag":"SysAdmin","date":"July 14 2023","excerpt":"Pada artikel ini saya akan melakukan konfigurasi master dan slave pada 2 DNS Server","cover_image":"/images/posts/PowerDNS - Master Slave.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"powerdns-menambahkan-records","frontmatter":{"published":true,"title":"PowerDNS - Menambahkan DNS Records pada DNS Server","tag":"SysAdmin","date":"July 12 2023","excerpt":"Pada artikel ini saya akan menambahkan DNS Records pada DNS Server yang berjalan menggunakan PowerDNS dan backend nya menggunakan MySQL","cover_image":"/images/posts/PowerDNS - Menambahkan Record.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"dns-cara-kerja-dan-jenis-jenis-record","frontmatter":{"published":true,"title":"DNS - Apa itu DNS? Pengertian, Fungsi dan Cara Kerja","tag":"SysAdmin","date":"July 11 2023","excerpt":"Pada artikel ini kita akan membahas apa itu DNS, bagaimana cara kerja DNS dan jenis - jenis record pada DNS","cover_image":"/images/posts/DNS - Jenis Jenis DNS Record.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"powerdns-instalasi","frontmatter":{"published":true,"title":"PowerDNS - Install PowerDNS di Ubuntu Server","tag":"SysAdmin","date":"July 04 2023","excerpt":"Pada artikel ini saya akan membuat langkah - langkah instalasi PowerDNS pada sistem operasi Ubuntu Server","cover_image":"/images/posts/PowerDNS - Install PowerDNS di Ubuntu Server.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"cpanel-error-401","frontmatter":{"published":true,"title":"cPanel - Cara memperbaiki error 401 pada WHM cPanel","tag":"SysAdmin","date":"June 27 2023","excerpt":"Pada artikel ini kita akan melakukan konfigurasi server untuk mengatasi error 401 ketika mengakses WHM cPanel","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"proxmox-installation-process","frontmatter":{"published":true,"title":"Proxmox - #1 Installation Process","tag":"SysAdmin","date":"June 26 2023","excerpt":"Pada artikel ini kita akan melakukan instalasi Proxmox VE","cover_image":"/images/posts/Proxmox - Installation Process.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"ubuntu-server-instalasi-ubuntu-server","frontmatter":{"published":true,"title":"Ubuntu Server - Instalasi Ubuntu Server 22.04","tag":"Linux","date":"June 21 2023","excerpt":"Pada artikel ini kita akan melakukan instalasi pada sistem operasi ubuntu server 22.04","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"powerbeam-m5-400-sebagai-client","frontmatter":{"published":false,"title":"Ubiquiti - PowerBeam M5 400 Sebagai Client (Station Mode)","tag":"Networking","date":"April 23 2023","excerpt":"Pada artikel ini kita akan melakukan konfigurasi pada perangkat antena wireless dari merek Ubiquiti yaitu PowerBeam M5 400 dengan mode station","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"codeigniter-hosting-di-cpanel","frontmatter":{"published":true,"title":"Codeigniter - Hosting di cPanel","tag":"Programming","date":"March 21 2023","excerpt":"Pada artikel ini kita akan melakukan hosting program codeigniter di cPanel","cover_image":"/images/posts/Codeigniter - Hosting di cPanel.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"archlinux-install-xdebug","frontmatter":{"published":true,"title":"Arch Linux - Install Xdebug","tag":"Linux","date":"March 01 2023","excerpt":"Pada artikel ini kita akan melakukan instalasi Xdebug untuk PHP dan berjalan di web server Apache","cover_image":"/images/posts/Arch Linux - Install Xdebug.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"xampp-phpmyadmin-allow-ip-from-remote-access","frontmatter":{"title":"XAMPP - Phpmyadmin Allow Ip From Remote Access","tag":"Setup","date":"Februrary 13 2023","excerpt":"Pada artikel ini kita akan melakukan configurasi phpmyadmin agar dapat diakses melalui ip address","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png","published":true}},{"slug":"codeigniter-configurasi-dasar","frontmatter":{"published":true,"title":"Codeigniter - Configurasi Dasar","tag":"Programming","date":"February 4 2023","excerpt":"Pada artikel ini kita akan melakukan configurasi dasar pada Framework Codeigniter","cover_image":"/images/posts/Codeigniter - Basic Configuration.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"xampp-menambahkan-xdebug","frontmatter":{"published":true,"title":"XAMPP - Menambahkan Xdebug","tag":"Programming","date":"January 25 2023","excerpt":"Pada artikel ini kita akan mencoba menambahkan Xdebug pada configurasi Apache di XAMPP","cover_image":"/images/posts/XAMPP - Install Xdebug.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"archlinux-apache-config-untuk-htaccess","frontmatter":{"published":true,"title":"Arch Linux - Mengaktifkan Mod Rewrite Pada Configurasi Apache","tag":"Linux","date":"January 24 2023","excerpt":"Pada artikel ini kita akan melakukan configurasi apache untuk enable .htaccess","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"php-js-select-option-form-input","frontmatter":{"published":true,"title":"PHP JS - Select Option Form Input","tag":"Programming","date":"January 24 2023","excerpt":"Pada artikel ini kita akan menggabungkan PHP dan JS untuk menangani select option pada form input","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"powershell-install-neovim-dengan-scoop","frontmatter":{"published":true,"title":"PowerShell - Install Neovim Menggunakan Scoop","tag":"Setup","date":"January 24 2023","excerpt":"Pada artikel ini kita akan melakukan instalasi Neovim menggunakan Scoop","cover_image":"/images/posts/neovim.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"powershell-install-oh-my-posh","frontmatter":{"published":true,"title":"PowerShell - Install Oh-My-Posh","tag":"Setup","date":"January 24 2023","excerpt":"Pada artikel ini kita akan melakukan instalasi Oh-My-Posh","cover_image":"/images/posts/ohmyposh.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"olt-command","frontmatter":{"published":true,"title":"OLT - List Perintah atau Command pada OLT","tag":"Networking","date":"January 18 2023","excerpt":"Artikel yang berisi kumpulan perintah atau command untuk perangkat OLT","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"olt-registrasi-onu","frontmatter":{"published":true,"title":"OLT - Registrasi ONU","tag":"Networking","date":"January 18 2023","excerpt":"Pada artikel ini kita akan mencoba melakukan registrasi ONU di OLT","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"php-object-oriented-programming","frontmatter":{"published":true,"title":"PHP - Object Oriented Programming","tag":"Programming","date":"January 18 2023","excerpt":"Object Oriented Programming atau biasa disingkat OOP merupakan sebuah paradigma pada bahasa pemrograman","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"cara-membuat-vlan-pada-interface-router-cisco","frontmatter":{"published":true,"title":"Cisco - Cara Membuat VLAN Pada Interface Router Cisco","tag":"Networking","date":"January 17 2023","excerpt":"Pada artikel ini kita akan mencoba membuat VLAN pada interface router cisco","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"git-&-github-kembali-ke-commit-sebelumnya","frontmatter":{"published":true,"title":"Git - Kembali Ke Commit Sebelumnya","tag":"Git","date":"January 17 2023","excerpt":"Pada artikel ini kita akan mencoba berpindah ke commit sebelumnya pada git","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"git-&-github-multiple-user-account","frontmatter":{"published":true,"title":"Git & GitHub - Multiple User Account","tag":"Git","date":"January 17 2023","excerpt":"Pada artikel ini kita akan melakukan configurasi agar Git & GitHub dapat multiple user akun","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"git-squash-commit","frontmatter":{"published":true,"title":"Git - Squash Commit","tag":"Git","date":"January 17 2023","excerpt":"Pada artikel ini kita akan melakukan Squash pada Commit di Git","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"konfigurasi-vlan-access-pada-switch-cisco","frontmatter":{"published":true,"title":"Cisco - Konfigurasi VLAN Access Pada Switch Cisco","tag":"Networking","date":"January 17 2023","excerpt":"Pada artikel ini kita akan melakukan konfigurasi VLAN Access pada Switch Cisco","cover_image":"/images/posts/Cisco - Konfigurasi VLAN Access Pada Switch Cisco.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"konfigurasi-vlan-trunk-pada-switch-cisco","frontmatter":{"published":true,"title":"Cisco - Konfigurasi VLAN Trunk Pada Switch Cisco","tag":"Networking","date":"January 17 2023","excerpt":"Pada artikel ini kita akan melakukan konfigurasi VLAN Trunk pada Switch Cisco","cover_image":"/images/posts/Cisco - Konfigurasi VLAN Trunk Pada Switch Cisco.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"mikrotik-basic-configuration","frontmatter":{"published":true,"title":"Mikrotik - Basic Configuration","tag":"Networking","date":"January 17 2023","excerpt":"Pada artikel ini kita akan mencoba basic configuration pada Router Mikrotik","cover_image":"/images/posts/Mikrotik - Basic Configuration.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}}]},"__N_SSG":true}