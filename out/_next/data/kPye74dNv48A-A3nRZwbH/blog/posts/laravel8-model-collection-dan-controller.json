{"pageProps":{"frontmatter":{"published":true,"title":"Laravel 8 - #5 - Model, Collection dan Controller","tag":"Programming","date":"December 22 2023","excerpt":"Aplikasi yang sudah dibangun sebelumnya itu semua proses nya masih ditangani komponen `routes` kita, contohnya ketika kita melakukan request ke halaman `/posts` untuk menampilkan semua data dari blog post kita dilakukan di dalam routes, begitu pula dengan proses menampilkan halaman views, itu juga dilakukan di dalam routes. Hal tersebut tidak tepat, karena jika kita ingin menerapkan konsep MVC (Model, View, Controller) maka 2 proses tersebut seharusnya kita pisahkan sesuai dengan komponen nya.","cover_image":"/images/posts/Laravel 8 - Model, Collection dan Controller.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"},"slug":"laravel8-model-collection-dan-controller","content":"\r\n## Pendahuluan\r\n\r\nAplikasi yang sudah dibangun sebelumnya itu semua proses nya masih ditangani komponen `routes` kita, contohnya ketika kita melakukan request ke halaman `/posts` untuk menampilkan semua data dari blog post kita dilakukan di dalam routes, begitu pula dengan proses menampilkan halaman views, itu juga dilakukan di dalam routes. Hal tersebut tidak tepat, karena jika kita ingin menerapkan konsep MVC (Model, View, Controller) maka 2 proses tersebut seharusnya kita pisahkan sesuai dengan komponen nya.\r\n\r\nMisalkan jika kita ingin bekerja atau berhubungan dengan data, maka kita harus menyimpan kode nya di dalam komponen `Model`. Dan jika terdapat sebuah proses seperti memilih, menampilkan views, maka kita harus menyimpan kode nya di dalam komponen `Controller`.\r\n\r\nMaka pada bagian ini, kita akan coba menerapkan konsep MVC dengan cara memisahkan kode nya ke dalam komponen-komponen yang terpisah. Sehingga nantinya kita akan belajar membuat model dan controller dan bagaimana cara menggabungkan ketiga komponen MVC tersebut.\r\n\r\nDan sedikit ada perubahan nama route pada aplikasi sebelumnya dari route `/blog` menjadi `/posts` di file `routes/web.php`\r\n\r\n```php\r\nRoute::get('/blog', function () {\r\n    ...\r\n});\r\n```\r\n\r\nMenjadi\r\n\r\n```php\r\nRoute::get('/posts', function () {\r\n    ...\r\n});\r\n```\r\n\r\nKemudian navbar anchor link nya juga di file `resources/views/partials/navbar.blade.php`\r\n\r\n```php\r\n<a class=\"nav-link {{ ($title === 'Posts' ? 'active' : '') }}\" href=\"/blog\">Blog</a>\r\n```\r\n\r\nMenjadi\r\n\r\n```php\r\n<a class=\"nav-link {{ ($title === 'Posts' ? 'active' : '') }}\" href=\"/posts\">Blog</a>\r\n```\r\n\r\nDan yang terakhir adalah anchor link pada single post di file `/resources/views/post.blade.php`\r\n\r\n```php\r\n<a href=\"/blog\">Back to Posts</a>\r\n```\r\n\r\nMenjadi\r\n\r\n```php\r\n<a href=\"/posts\">Back to Posts</a>\r\n```\r\n\r\n## 3 Cara Pembuatan Model\r\n\r\nTerdapat 3 cara untuk pembuatan Model di aplikasi Laravel kita, berikut ada 3 cara untuk membuat Model pada aplikasi Laravel\r\n\r\n### PHP Artisan: Membuat Model\r\n\r\nUntuk membuat sebuah model pada aplikasi Laravel kita, kita bisa menggunakan perintah PHP Artisan dengan cara seperti berikut ini di terminal kalian\r\n\r\n```php\r\nphp artisan make:model NamaModel\r\n```\r\n\r\n### Membuat Model Manual\r\n\r\nKalian juga bisa membuat model secara manual dengan cara membuat file pada folder `app/Models`\r\n\r\n### Membuat Model menggunakan Extension Laravel Artisan\r\n\r\nJika kalian sudah menginstall extension nya, kalian bisa membuat sebuah model dengan menggunakan command palette milik nya Visual Studio Code. Caranya kalian cukup tekan `CTRL` + `P` kemudian ketikan `Artisan: Make Model`\r\n\r\n![Artisan Command Pallete Create Model](https://mzulkiakbari.alkaysan.co.id/images/posts/assets/laravel8/model-collection-dan-controller/artisan-command-palette-create-model.png)\r\n\r\n## Pembuatan Model Untuk Data Blog Post\r\n\r\nSebelumnya kita menyimpan data blog post di lokasi routes nya, nah cara tersebut sebetulnya tidak tepat dan tidak efisien (karena kita menduplikat variable tersebut pada route single post nya). Untuk mengatasi hal tersebut, kita disini akan mencoba memindahkan data blog post tersebut kedalam sebuah model.\r\n\r\nKita akan memilih pembuatan model menggunakan cara `PHP Artisan` yang dimana akan menjalankan artisan melalui aplikasi Terminal. Maka disini kita jalankan dengan perintah seperti berikut ini\r\n\r\n```php\r\nphp artisan make:model Post\r\n```\r\n\r\nMaka sekarang terdapat sebuah file baru di folder `app/Models` dengan nama file nya adalah `Post.php`. Pada model tersebut terdapat sebuah kode\r\n\r\n```php\r\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\r\nuse Illuminate\\Database\\Eloquent\\Model;\r\n```\r\n\r\nyang dimana berfungsi untuk nantinya terhubung kedalam database, namun karena kita belum butuh maka bisa kita hapus dan extends pada Class `Model` nya juga bisa kita hapus\r\n\r\nSehingga sekarang isi dari file model `Post.php` tersebut seperti berikut ini\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Models;\r\n\r\nclass Post\r\n{\r\n\r\n}\r\n```\r\n\r\n### Pemindahan Data Posts Dari Routes Kedalam Model\r\n\r\nSelanjutnya kita coba cut atau ambil data `$blog_posts` dari route `/posts` agar disimpan di Model `Post.php` dengan access modifier private dan juga static\r\n\r\nmaka sekarang isi file `Post.php` seperti berikut ini\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Models;\r\n\r\nclass Post\r\n{\r\n    private static $blog_posts = [\r\n        [\r\n            'title' => 'Judul Post Pertama',\r\n            'slug' => 'judul-post-pertama',\r\n            'author' => 'Arman Dwi Pangestu',\r\n            'body' => 'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quasi aliquid perspiciatis possimus. Quae sapiente molestiae perferendis ut dolorum illum fugit corrupti! Ratione pariatur quis odio! Explicabo quo incidunt velit aliquam iure, doloribus natus molestiae ab officiis, ea distinctio fugit dolores eos quam magni aliquid libero nihil ex iusto unde? Voluptates!'\r\n        ],\r\n        [\r\n            'title' => 'Judul Post Kedua',\r\n            'slug' => 'judul-post-kedua',\r\n            'author' => 'Sandhika Galih',\r\n            'body' => 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Delectus, nobis qui. Officia eius, debitis eveniet nisi culpa quas, voluptate enim impedit ipsa corrupti sapiente nesciunt mollitia facilis at cumque laudantium.'\r\n        ]\r\n    ];\r\n}\r\n\r\n```\r\n\r\n### Menghubungkan Routes Dengan Model\r\n\r\nDan isi dari route `/posts` nya menjadi seperti berikut ini\r\n\r\n> **Catatan**:\r\n>\r\n> Jika kalian mendapatkan error pada Class `Post` nya, maka kalian harus melakukan import Class nya pada bagian paling atas file dengan perintah berikut ini:\r\n>\r\n> ```php\r\n> use App\\Models\\Post;\r\n> ```\r\n>\r\n> Jika kalian ingin mempermudah masalah import namespace tersebut, kalian bisa install Extension VSCode yang namanaya `PHP Namespace Resolver`. Extension tersebut jika kita melakukan klik kanan pada VSCode maka kita bisa melakukan `Import All Classes`, sehingga jika ada Class yang error karena namespace nya tidak diload, dengan extension tersbeut akan otomatis terimport semua namespace nya.\r\n>\r\n> Method `all()` juga disini belum kita buat, sehingga pasti akan muncul error\r\n\r\n```php\r\nRoute::get('/posts', function () {\r\n    return view('posts', [\r\n        \"title\" => \"Posts\",\r\n        \"posts\" => Post::all()\r\n    ]);\r\n});\r\n```\r\n\r\nSetelah routes dan model nya terhubung, sekarang kita buat method `all()` nya di Class `Post` atau Model nya seperti berikut ini\r\n\r\n> **Catatan**: Tips Object Oriented Programming!\r\n>\r\n> Dikarenakan disini property `$blog_posts` nya adalah `static` maka kita harus menggunakan keyword `self::$property`, namun jika property nya biasa maka kita menggunakan keyword `$this->property`.\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Models;\r\n\r\nclass Post\r\n{\r\n    private static $blog_posts = [\r\n        ...\r\n    ];\r\n\r\n    public static function all()\r\n    {\r\n        return self::$blog_posts;\r\n    }\r\n}\r\n```\r\n\r\n### Pemindahan Data Single Post Blog Agar Menggunakan Data Dari Model\r\n\r\nNah, pemindahan data dari routes ke model sudah selesai, jika kalian melakukan refresh pada web browser dengan routes `/posts` maka tidak akan muncul error, namun jika kalian masuk ke dalam single post nya, data nya masih menggunakan data dari routes nya (bukan dari model).\r\n\r\nSelanjutnya kita akan ubah juga agar data dari single post menggunakan data dari model nya. Sekarang ubah route single page atau route slug nya menjadi seperti berikut ini\r\n\r\n```php\r\n// Halaman Single Post\r\nRoute::get('posts/{slug}', function ($slug) {\r\n    return view('post', [\r\n        'title' => 'Single Post',\r\n        'post' => Post::find($slug)\r\n    ]);\r\n});\r\n```\r\n\r\nSelanjutnya kita buat sebuah method static lagi dengan nama method nya adalah `find()` di Model `Post` nya\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Models;\r\n\r\nclass Post\r\n{\r\n    private static $blog_posts = [\r\n        ...\r\n    ];\r\n\r\n    public static function all()\r\n    {\r\n        return self::$blog_posts;\r\n    }\r\n\r\n    public static function find($slug)\r\n    {\r\n        $posts = self::$blog_posts;\r\n\r\n        $post = [];\r\n\r\n        foreach ($posts as $p) {\r\n            if ($p['slug'] === $slug) {\r\n                $post = $p;\r\n            }\r\n        }\r\n\r\n        return $post;\r\n    }\r\n}\r\n```\r\n\r\nMaka sekarang data dari view single post nya sudah mengambil dari Model yang sudah kita buat dan kode pada bagian routes nya juga sudah menjadi rapih (tidak ada data, karena data memang seharusnya di tempatkan pada komponen model).\r\n\r\n## Collection Pada Laravel\r\n\r\nKita bisa ubah data yang kita ambil agar menjadi sesuatu yang disebut dengan collection di Laravel. Apa itu `Collection`? Collection sebetulny adalah pembungkus untuk sebuah Array, yang akan membuat Array menjadi lebih sakti.\r\n\r\nMaksudnya bagaimana? lihat kode pada bagian mode berikut ini\r\n\r\n```php\r\nprivate static $blog_posts = [\r\n    [\r\n        'title' => 'Judul Post Pertama',\r\n        'slug' => 'judul-post-pertama',\r\n        ...\r\n    ],\r\n    [\r\n        'title' => 'Judul Post Kedua',\r\n        'slug' => 'judul-post-kedua',\r\n        ...\r\n    ]\r\n];\r\n\r\npublic static function all()\r\n{\r\n    return self::$blog_posts;\r\n}\r\n```\r\n\r\nPada data model tersebut, kita mempunyai sebuah array di dalam array, ada array numeric yang didalamnya ada array associative. Nah kita akan membungkus array tersebut agar menjadi sebuah Collection.\r\n\r\nJika pada dokumentasi Laravel nya, di dalam Laravel menyediakan sebuah Collection yang merupakan pembungkus dari arrays of data. Sebagai contoh, lihat kode berikut ini. Kita akan menggunakan helper `collect` untuk membuat sebuah instance collection baru dari array kemudian menjalankan function `strtoupper` pada setiap element dan menghapus semua element kosong:\r\n\r\n```php\r\n$collection = collect(['taylor', 'abigail', null])->map(function ($name) {\r\n    return strtoupper($name);\r\n})->reject(function ($name) {\r\n    return empty($name);\r\n});\r\n```\r\n\r\n### Cara Membuat Collection\r\n\r\nSeperti yang dijelaskan sebelumnya, helper `collect` akan mengembalikan sebuah namespace `Illuminate\\Support\\Collection` instance untuk memberikan array. Jadi, untuk membuat sebuah collection cukup simpel seperti kode berikut ini:\r\n\r\n```php\r\n$collection = collect([1, 2, 3]);\r\n```\r\n\r\n### Method Yang Tersedia Untuk Collection\r\n\r\nDengan mengubah array kita menjadi collection, maka array kita sekarang dapat menjalankan method-method yang tersedia pada collection. Berikut adalah list-list method yang tersedia pada Collection.\r\n\r\n> **Catatan**:\r\n>\r\n> Kalian bisa melihat list method-method yang tersedia secara lebih lengkap pada dokumentasi laravel berikut ini [laravel.com/docs/8.x/collections#available-methods](https://laravel.com/docs/8.x/collections#available-methods)\r\n\r\n![Collection Available Method](https://mzulkiakbari.alkaysan.co.id/images/posts/assets/laravel8/model-collection-dan-controller/collection-available-method.png)\r\n\r\n### Alasan Mengapa Melakukan Convert Array Menjadi Collection\r\n\r\nNah, berhubung array yang di convert menjadi collection dapat menjalankan method-method. Kita akan menggunakan beberapa method keren pada collection seperti `first` dan `firstWhere`.\r\n\r\nMethod `first` ini berfungsi untuk mencari element yang pertama, jika method `firstWhere` untuk mencari element yang pertama ketemu dengan sebuah kondisi.\r\n\r\n### Mengubah Data Post Model Menjadi Sebuah Collection\r\n\r\nSetelah memahami mengapa kita perlu mengubah array menjadi collection, selanjutnya kita akan ubah data array pada post model yang sudah kita buat sebelumnya agar menjadi sebuah collection di file `app\\Models\\Post.php`\r\n\r\n> **Catatan**: Tips Object Oriented Programming!\r\n>\r\n> Perhatikan penulisan pemanggilan sebuah method yang static\r\n>\r\n> ```php\r\n> static::method();\r\n> ```\r\n>\r\n> Keyword static didepan, merupakan teknik penulisan untuk pemanggilan method yang static, namun jika variabel teknik penulisan nya adalah\r\n>\r\n> ```php\r\n> self::$property;\r\n> ```\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Models;\r\n\r\nclass Post\r\n{\r\n    private static $blog_posts = [\r\n        ...\r\n    ];\r\n\r\n    public static function all()\r\n    {\r\n        return collect(self::$blog_posts);\r\n    }\r\n\r\n    public static function find($slug)\r\n    {\r\n        $posts = static::all();\r\n\r\n        // $post = [];\r\n\r\n        // foreach ($posts as $p) {\r\n        //     if ($p['slug'] === $slug) {\r\n        //         $post = $p;\r\n        //     }\r\n        // }\r\n\r\n        return $posts->firstWhere('slug', $slug);\r\n    }\r\n}\r\n```\r\n\r\nBisa kalian lihat pada kode diatas tersebut, yang sebelumnya kita melakukan sebuah looping untuk mencari data berdasarkan `$slug` di url atau route nya. Sekarang menjadi simpel dengan menggunakan method yang tersedia pada collection yaitu `firstWhere`.\r\n\r\nKode tersebut artinya sebagai berikut, ambil semua collection dari property `$posts` kemudian cari yang pertama kali ditemukan yang dimana slug nya = `$slug`.\r\n\r\n## Pembuatan Controller\r\n\r\nSetelah 2 komponen selesai kita buta yaitu Model dan View, selanjutnya kita akan membuat 1 komponen lagi yaitu Controller agar paradigma MVC benar-benar kita gunakan. Jika kalian lihat sekarang pada bagian routes nya, yang menangani proses itu masih routes nya itu sendiri.\r\n\r\n```php\r\nRoute::get('/', function () {\r\n    return view('home', [\r\n        'title' => 'Home'\r\n    ]);\r\n});\r\n\r\nRoute::get('/about', function () {\r\n    return view('about', [\r\n        \"title\" => \"About\",\r\n        \"name\" => \"Arman Dwi Pangestu\",\r\n        \"email\" => \"armandwi.pangestu7@gmail.com\",\r\n        \"image\" => \"me-circle.png\"\r\n    ]);\r\n});\r\n\r\nRoute::get('/posts', function () {\r\n    return view('posts', [\r\n        \"title\" => \"Posts\",\r\n        \"posts\" => Post::all()\r\n    ]);\r\n});\r\n\r\n// Halaman Single Post\r\nRoute::get('posts/{slug}', function ($slug) {\r\n    return view('post', [\r\n        'title' => 'Single Post',\r\n        'post' => Post::find($slug)\r\n    ]);\r\n});\r\n```\r\n\r\nNah, seharusnya proses tersebut di handle atau diurus oleh Controller jika kita ingin menerapkan konsep paradgima MVC. Karena memang yang namanya Controller itu adalah yang menangani atau mengendalikan nampilin atau View yang mana dan ngambil Model dari mana.\r\n\r\nJika diambil penjelasan Controller pada website resmi Laravel nya, Controller adalah dari pada kita mendefinisikan semua logic program kita saat menangani proses request atau closure\r\n\r\n```php\r\nRoute::get('', function() {\r\n    // Anonymous function inilah yang dinamakan closure\r\n})\r\n```\r\n\r\nDari pada kita bikin sebagai closure di dalam routes file kita, kita bisa merapihkan hal tersebut menggunakan sebuah Class `Controller`. Controller bisa menggabungkan atau mengelompokan request yang serupa yang saling terkait untuk menangani logic nya dalam sebuah Class. Contohnya, jika kita ingin menangani halaman semua postingan dan yang menangani single postingan. Nah, hal tersebut cocok dijadikan satu Controller karena dua proses tersebut dihandle oleh Controller Post nantinya.\r\n\r\n### Cara Membuat atau Menulis Controller\r\n\r\nUntuk pembuatan atau penulisan sebuah Controller, kita bisa bikin sebuah file yang tersimpan di `app/Http/Controllers/` atau namespace folder ini `App\\Http\\Controllers\\` kemudian isian dari file tersebut membuat sebuah class yang format penulisan nya adalah `Nama` kemudian di ikuti dengan kata `Controller` sehingga menjadi `IniNamaController` atau pada studi kasus kita `PostController` dan class tersebut meng-extends atau mewarisi class bawaan laravel yaitu `Controller`. Nah, didalam class tersebut nantinya mempunyai berbagai macam method untuk menangani tiap-tiap logic nya. Contoh penulisan Controller pada dokumentasi resmi Laravel nya sebagai berikut\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Http\\Controllers;\r\n\r\nuse App\\Http\\Controllers\\Controller;\r\nuse App\\Models\\User;\r\n\r\nclass UserController extends Controller\r\n{\r\n    /**\r\n     * Show the profile for a given user.\r\n     *\r\n     * @param  int  $id\r\n     * @return \\Illuminate\\View\\View\r\n     */\r\n    public function show($id)\r\n    {\r\n        return view('user.profile', [\r\n            'user' => User::findOrFail($id)\r\n        ]);\r\n    }\r\n}\r\n```\r\n\r\nNah, nantinya kita akan membuat 2 buah method didalam class Controller tersebut, 1 untuk menangani semua postingan dan 1 lagi untuk menangani sebuah postingan atau single post nya. Nah, setelah controller jadi, maka si routes nya tidak mempunyai lagi closure, namun kita tulis seperti ini saja\r\n\r\n```php\r\nuse App\\Http\\Controllers\\UserController;\r\n\r\nRoute::get('/user/{id}', [UserController::class, 'show']);\r\n```\r\n\r\n### Cara Membuat Controller Menggunakan Artisan\r\n\r\nSama halnya dengan model, kita juga bisa membuat controller menggunakan perintah php artisan dengan perintah seperti berikut ini\r\n\r\n```php\r\nphp artisan make:controller NamaController\r\n```\r\n\r\n### Implementasi atau Penerapan Controller untuk Semua Postingan\r\n\r\nSetelah mengetahui mengapa menggunakan Controller dan bagaimana cara membuatnya, sekarang saatnya kita menerapkan nya. Sekarang kalian buat sebuah Controller menggunakan perintah berikut ini:\r\n\r\n```php\r\nphp artisan make:controller PostController\r\n```\r\n\r\nMaka sekarang terdapat sebuah file baru di `app/Http/Controllers/PostController.php` dengan isian seperti berikut:\r\n\r\n> **Catatan**:\r\n>\r\n> Abaikan terlebih dahulu bagian\r\n>\r\n> ```php\r\n> use Illuminate\\Http\\Request;\r\n> ```\r\n>\r\n> Karena hal tersebut nantinya akan berguna untuk menangani request jika kita mempunyai form atau data di URL sebagai request.\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Http\\Controllers;\r\n\r\nuse Illuminate\\Http\\Request;\r\n\r\nclass PostController extends Controller\r\n{\r\n    //\r\n}\r\n```\r\n\r\nSetelah Controller dibuat, selanjutnya kita akan membuat method yang namanya `index` sebagai method default nya.\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Http\\Controllers;\r\n\r\nuse Illuminate\\Http\\Request;\r\n//use App\\Models\\Post;\r\n\r\nclass PostController extends Controller\r\n{\r\n    public function index()\r\n    {\r\n        return view('posts', [\r\n            \"title\" => \"Posts\",\r\n            // Menggunakan use\r\n            //\"posts\" => Post::all()\r\n\r\n            // Menggunakan expand class\r\n            \"posts\" => \\App\\Models\\Post::all()\r\n        ]);\r\n    }\r\n}\r\n```\r\n\r\nSetelah Controller ready atau siap, sekarang kita benarkan penulisan routes nya agar tidak lagi menggunakan closure, sehingga yang tadinya penulisan nya seperti ini:\r\n\r\n```php\r\nRoute::get('/posts', function () {\r\n    return view('posts', [\r\n        \"title\" => \"Posts\",\r\n        \"posts\" => Post::all()\r\n    ]);\r\n});\r\n```\r\n\r\nSekarang menjadi seperti ini\r\n\r\n```php\r\nRoute::get('/posts', [PostController::class, 'index']);\r\n```\r\n\r\nNah, sekarang kita sudah menerapkan controller untuk menangani halaman semua postingan blog kita.\r\n\r\n### Implementasi atau Penerapan Controller untuk Single Postingan\r\n\r\nSetelah sebelumnya kita sudah menerapkan controller untuk menangani halaman semua postingan, selanjutnya kita buat sebuah method baru dengan nama `show` untuk menangani single post nya.\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Http\\Controllers;\r\n\r\nuse Illuminate\\Http\\Request;\r\n//use App\\Models\\Post;\r\n\r\nclass PostController extends Controller\r\n{\r\n    public function index()\r\n    {\r\n        return view('posts', [\r\n            \"title\" => \"Posts\",\r\n            // Menggunakan use\r\n            //\"posts\" => Post::all()\r\n\r\n            // Menggunakan expand class\r\n            \"posts\" => \\App\\Models\\Post::all()\r\n        ]);\r\n    }\r\n\r\n    public function show($slug)\r\n    {\r\n        return view('post', [\r\n            'title' => 'Single Post',\r\n            'post' => \\App\\Models\\Post::find($slug)\r\n        ]);\r\n    }\r\n}\r\n```\r\n\r\nNah, sekarang kita ubah bagian kode routes yang menggunakan closure pada route yang menangani single post nya agar menggunakan controller nya\r\n\r\n```php\r\nRoute::get('/posts', [PostController::class, 'index']);\r\n// Halaman Single Post\r\nRoute::get('posts/{slug}', [PostController::class, 'show']);\r\n```\r\n","posts":[{"slug":"cloud-run-github-actions","frontmatter":{"published":true,"title":"Cloud Run - Implementasi DevOps CI/CD Pipeline Menggunakan GitHub Actions","tag":"DevOps","date":"May 06 2024","excerpt":"Pada artikel ini kita akan melakukan deployment simpel app Express.js menggunakan Cloud Run dan meng-implementasikan CI/CD Pipeline menggunakan GitHub Actions","cover_image":"/images/posts/Cloud Run - Implementasi DevOps CI CD Pipeline Menggunakan GitHub Actions.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"terraform-otomatisasi-deployment-infastructure-menggunakan-terraform","frontmatter":{"published":true,"title":"Terraform - Otomatisasi Deployment Infrastructure Menggunakan Terraform","tag":"Cloud","date":"April 01 2024","excerpt":"Pada pembahasan kali ini saya akan mencoba menggunakan Terraform untuk mendeploy infrastructure pada Google Cloud Platform (GCP)","cover_image":"/images/posts/Terraform - Otomatisasi Deployment Infrastructure Menggunakan Terraform.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"tutorial-docker-instalasi-windows-11","frontmatter":{"published":false,"title":"Tutorial Docker - Instalasi Windows 11","tag":"SysAdmin","date":"February 17 2024","excerpt":"Test Thumbnail","cover_image":"/images/posts/Tutorial Docker - Instalasi Windows 11.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"vmware-workstation-player-instalasi-linux-debian","frontmatter":{"published":true,"title":"VMware Workstation Player - Instalasi Linux Debian","tag":"SysAdmin","date":"February 17 2024","excerpt":"Pada artikel kali ini kita akan mencoba melakukan instalasi Linux Debian pada Virtual Machine yang sudah dibuat pada pembahasan sebelumnya.","cover_image":"/images/posts/VMware Workstation Player - Instalasi Linux Debian.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"vmware-workstation-player-membuat-virtual-machine","frontmatter":{"published":true,"title":"VMware Workstation Player - Membuat Virtual Machine (VM)","tag":"SysAdmin","date":"February 17 2024","excerpt":"Pada artikel kali ini kita akan mencoba membuat sebuah Virtual Machine dengan sistem operasi Linux dengan distro nya adalah Debian pada VMware Workstation Player","cover_image":"/images/posts/VMware Workstation Player - Membuat Virtual Machine.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"vmware-workstation-player-instalasi-di-windows11","frontmatter":{"published":true,"title":"VMware Workstation Player - Instalasi di Windows 11","tag":"SysAdmin","date":"February 8 2024","excerpt":"Pada artikel kali ini kita akan mencoba menginstall VMware Workstation Player pada sistem operasi Windows 11","cover_image":"/images/posts/VMware Workstation Player - Instalasi di Windows 11.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel-eloquent-relationship-has-one-through","frontmatter":{"published":false,"title":"Laravel Eloquent - Relationship Has One Through","tag":"Programming","date":"February 4 2024","excerpt":"Pada artikel kali ini kita akan membahas mengenai Laravel Eloquent Relationship Has One Through","cover_image":"/images/posts/Laravel Eloquent - Relationship Has One Through.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel-eloquent-relationship-advanced-has-one-of-many","frontmatter":{"published":true,"title":"Laravel Eloquent - Relationship Advanced Has One of Many","tag":"Programming","date":"January 30 2024","excerpt":"Pada artikel kali ini kita akan membahas mengenai Laravel Eloquent Relationship Advanced Has One of Many","cover_image":"/images/posts/Laravel Eloquent - Relationship Advanced Has One of Many.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel-eloquent-relationship-has-one-of-many","frontmatter":{"published":true,"title":"Laravel Eloquent - Relationship Has One of Many","tag":"Programming","date":"January 28 2024","excerpt":"Pada artikel kali ini kita akan membahas mengenai Laravel Eloquent Relationship Has One of Many","cover_image":"/images/posts/Laravel Eloquent - Relationship Has One of Many.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel-eloquent-relationship-where-belongs-to","frontmatter":{"published":true,"title":"Laravel Eloquent - Relationship Where Belongs To","tag":"Programming","date":"January 24 2024","excerpt":"Pada artikel kali ini kita akan membahas mengenai Laravel Eloquent Relationship Where Belongs To","cover_image":"/images/posts/Laravel Eloquent - Relationship Where Belongs To.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel-eloquent-relationship-default-models","frontmatter":{"published":true,"title":"Laravel Eloquent - Relationship Default Models","tag":"Programming","date":"January 22 2024","excerpt":"Pada artikel kali ini kita akan membahas mengenai Laravel Eloquent Relationship Default Models","cover_image":"/images/posts/Laravel Eloquent - Relationship Default Models.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel-eloquent-relationship-one-to-many","frontmatter":{"published":true,"title":"Laravel Eloquent - Relationship One to Many","tag":"Programming","date":"January 22 2024","excerpt":"Pada artikel kali ini kita akan membahas mengenai Laravel Eloquent Relationship untuk tipe One to Many atau hasMany","cover_image":"/images/posts/Laravel Eloquent - Relationship One to Many.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel-eloquent-relationship-one-to-one","frontmatter":{"published":true,"title":"Laravel Eloquent - Relationship One to One","tag":"Programming","date":"January 20 2024","excerpt":"Pada artikel kali ini kita akan membahas mengenai Laravel Eloquent Relationship untuk tipe One to One atau hasOne","cover_image":"/images/posts/Laravel Eloquent - Relationship One to One.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-authorization","frontmatter":{"published":true,"title":"Laravel 8 - #23 - Authorization","tag":"Programming","date":"January 7 2024","excerpt":"Pada pembahasan kali ini, kita akan membuat feature terakhir dari sistem blog kita, feature tersebut yaitu Authorization atau Otorisasi, setelah sebelumnya kita sudah membuat feature Autentikasi untuk login dan registrasi, sekarang kita akan membuat agar user yang tadi sudah berhasil registrasi dan juga login itu memiliki peran yang berbeda. Contohnya adalah terdapat user biasa dan juga user administrator.","cover_image":"/images/posts/Laravel 8 - Authorization.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-preview-update-dan-delete-image","frontmatter":{"published":true,"title":"Laravel 8 - #22 - Preview, Update dan Delete Image","tag":"Programming","date":"January 6 2024","excerpt":"Pada pembahasan kali ini kita akan melanjutkan feature pengelolaan gambar pada blog post kita sebelumnya, kali ini kita akan menerapkan 3 buah feature, yaitu preview, update dan delete image.","cover_image":"/images/posts/Laravel 8 - Preview, Update dan Delete Image.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-upload-image","frontmatter":{"published":true,"title":"Laravel 8 - #21 - Upload Image","tag":"Programming","date":"January 6 2024","excerpt":"Pada pembahasan kali ini kita akan mencoba menambahkan sebuah feature untuk melengkapi CRUD dari blog kita, yaitu menambahkan feature upload gambar yang dimana nantinya user dapat mengupload gambar sendiri dari komputer nya untuk menggantikan gambar yang sebelumnya kita ambil dari API nya Unsplash.","cover_image":"/images/posts/Laravel 8 - Upload Image.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-update-dan-delete-post","frontmatter":{"published":true,"title":"Laravel 8 - #20 - Update dan Delete Post","tag":"Programming","date":"January 4 2024","excerpt":"Pada pembahasan kali ini kita akan melengkapi aplikasi blog sederhana kita, setelah sebelumnya kita berhasil menambahkan feature CREATE dan READ data, kali ini kita akan melengkapi lagi dengan menambahkan feature UPDATE dan DELETE, sehingga feature CRUD nya sudah bisa dijalankan semua.","cover_image":"/images/posts/Laravel 8 - Update dan Delete Post.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-validation-dan-insert-post","frontmatter":{"published":true,"title":"Laravel 8 - #19 - Validation dan Insert Post","tag":"Programming","date":"January 4 2024","excerpt":"Setelah sebelumnya kita berhasil membuat sebuah form untuk create blog post kita, pada pembahasan kali ini kita akan mencoba untuk melengkapi nya dengan feature validasi pada form nya dan insert kedalam databasenya.","cover_image":"/images/posts/Laravel 8 - Validation dan Insert Post.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-create-post-form","frontmatter":{"published":true,"title":"Laravel 8 - #18 - Create Post Form","tag":"Programming","date":"January 3 2024","excerpt":"Kali ini kita akan melanjutkan kembali pembuatan feature CRUD pada aplikasi sistem blog sederhana kita, setelah sebelumnya kita berhasil membuat tampilan UI untuk bagian Dashboard kita sambil juga menampilkan data post dari user yang sudah berhasil login, feature tersebut sebetulnya sudah masuk kedalam CRUD yaitu bagian READ nya. Nah, sekarang tersisa 3 lagi yaitu CREATE, UPDATE dan DELETE.","cover_image":"/images/posts/Laravel 8 - Create Post Form.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-dashboard-ui","frontmatter":{"published":true,"title":"Laravel 8 - #17 - Dashboard UI","tag":"Programming","date":"January 2 2024","excerpt":"Setelah sebelumya kita sudah berhasil menambahkan feature login dan registrasi pada aplikasi blog sistem kita. Kali ini kita akan masuk kedalam dashboard dalam aplikasi kita, dimana nantinya kita bisa menambahkan feature pengelolaan postingan kita atau blog post kita seperti menambah, melihat detail, mengubah dan menghapus atau istilah nya disebut dengan CRUD (Create, Read, Update dan Delete) Operation.","cover_image":"/images/posts/Laravel 8 - Dashboard UI.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-user-login-dan-middleware","frontmatter":{"published":true,"title":"Laravel 8 - #16 - User Login dan Middleware","tag":"Programming","date":"January 1 2024","excerpt":"Pada pembahasan kali ini kita akan melanjutkan pembahasan mengenai aplikasi blog kita, setelah sebelumnya kita berhasil membuat feature registrasi untuk user kita. Nah, sekarang saatnya kita akan membuat dan meng-aplikasikan feature login nya, sehingga nantinya user yang berhasil registrasi itu bisa masuk kedalam aplikasi kita. Selain kita membuat feature login, kita juga akan sambil mempelajari featrue `middleware` yang ada didalam Laravel.","cover_image":"/images/posts/Laravel 8 - User Login dan Middleware.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-user-registration","frontmatter":{"published":true,"title":"Laravel 8 - #15 - User Registration","tag":"Programming","date":"December 31 2023","excerpt":"Pada pembahasan kali ini kita akan membuat feature registrasi untuk aplikasi blog laravel kita.","cover_image":"/images/posts/Laravel 8 - User Registration.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-view-login-dan-registration","frontmatter":{"published":true,"title":"Laravel 8 - #14 - View Login dan Registration","tag":"Programming","date":"December 31 2023","excerpt":"Pada pembahasan kali ini kita akan membuat view untuk feature login dan registration. Seperti biasa disini kita akan menggunakan bantuan framework frontend yaitu Bootstrap untuk bagian komponen nya.","cover_image":"/images/posts/Laravel 8 - View Login dan Registration.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-searching-dan-pagination","frontmatter":{"published":true,"title":"Laravel 8 - #13 - Searching dan Pagination","tag":"Programming","date":"December 30 2023","excerpt":"Pada pembahasan kali ini kita akan menambahkan 2 feature keren kedalam aplikasi blog kita yaitu Searching dan Pagination.","cover_image":"/images/posts/Laravel 8 - Searching dan Pagination.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-redesign-ui","frontmatter":{"published":true,"title":"Laravel 8 - #12 - Redesign UI","tag":"Programming","date":"December 29 2023","excerpt":"Pada pembahasan kali ini kita akan istirahat terlebih dahulu untuk mempelajari feature-feature utama yang ada didalam Laravel. Pada pembahasan kali ini kita akan mencoba memperbaiki tampilan halaman web blog kita agar lebih fresh lagi dan lebih mudah untuk digunakan.","cover_image":"/images/posts/Laravel 8 - Redesign UI.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-n1-problem","frontmatter":{"published":true,"title":"Laravel 8 - #11 - N+1 Problem","tag":"Programming","date":"December 28 2023","excerpt":"Pada pembahasan kali ini kita akan membahas sesuatu problem pada query database kita yang sangat berpengaruh terhadap performa aplikasi. Problem tersebut dinamakan N+1 Problem","cover_image":"/images/posts/Laravel 8 - N1 Problem.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-factory-dan-faker","frontmatter":{"published":true,"title":"Laravel 8 - #10 - Factory dan Faker","tag":"Programming","date":"December 27 2023","excerpt":"Pada pembahasan kali ini kita akan membahas sesuatu yang tidak kalah menarik yaitu Factory dan Faker pada Laravel, feature tersebut akan sangat berguna jika kita sedang mendevelop sesuatu yang berhubungan dengan dummy data.","cover_image":"/images/posts/Laravel 8 - Factory dan Faker.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-database-seeder","frontmatter":{"published":true,"title":"Laravel 8 - #9 - Database Seeder","tag":"Programming","date":"December 26 2023","excerpt":"Pada pembahasan kali ini kita akan membahas sesuatu feature yang tidak kalah keren pada Laravel yaitu Seeder","cover_image":"/images/posts/Laravel 8 - Database Seeder.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-post-category-dan-eloquent-relationship","frontmatter":{"published":true,"title":"Laravel 8 - #8 - Post Category dan Eloquent Relationship","tag":"Programming","date":"December 25 2023","excerpt":"Pada pembahasan kali ini kita akan membahas sesuatu yang sangat menarik yaitu mengenai keterhubungan antar tabel atau didalam Laravel itu disebut nya dengan `Eloquent Relationship` (bagaimana hubungan antar model). Sehingga nantinya pada studi kasus sistem blog kita akan menerapkan sebuah category pada setiap post di blog kita.","cover_image":"/images/posts/Laravel 8 - Post Category dan Eloquent Relationship.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-post-model-dan-route-model-binding","frontmatter":{"published":true,"title":"Laravel 8 - #7 - Post Model dan Route Model Binding","tag":"Programming","date":"December 24 2023","excerpt":"Pada pembahasan kali ini kita akan membahas kembali mengenai model didalam Laravel, yang dimana akan kita perbaiki model `Post` kita yang sebelumnya dibuat secara manual, kali ini kita akan coba buat agar model nya dengan cara yang benar yaitu dengan merepresentasikan class model nya sebagai tabel didalam database. Hal tersebut nantinya kita juga harus membuat sebuah migrasi untuk tabel Post tersebut.","cover_image":"/images/posts/Laravel 8 - Post Model dan Route Model Binding.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-database-migration-dan-eloquent","frontmatter":{"published":true,"title":"Laravel 8 - #6 - Database, Migration dan Eloquent","tag":"Programming","date":"December 23 2023","excerpt":"Laravel, sebagai salah satu framework PHP yang paling populer, menyediakan pendekatan yang kuat dan efisien dalam mengelola basis data. Dalam artikel ini, kita akan menjelajahi aspek-aspek kunci terkait database di Laravel, dengan penekanan khusus pada konsep migrasi (migration) dan Eloquent, sistem ORM bawaan Laravel.","cover_image":"/images/posts/Laravel 8 - Database, Migration dan Eloquent.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-model-collection-dan-controller","frontmatter":{"published":true,"title":"Laravel 8 - #5 - Model, Collection dan Controller","tag":"Programming","date":"December 22 2023","excerpt":"Aplikasi yang sudah dibangun sebelumnya itu semua proses nya masih ditangani komponen `routes` kita, contohnya ketika kita melakukan request ke halaman `/posts` untuk menampilkan semua data dari blog post kita dilakukan di dalam routes, begitu pula dengan proses menampilkan halaman views, itu juga dilakukan di dalam routes. Hal tersebut tidak tepat, karena jika kita ingin menerapkan konsep MVC (Model, View, Controller) maka 2 proses tersebut seharusnya kita pisahkan sesuai dengan komponen nya.","cover_image":"/images/posts/Laravel 8 - Model, Collection dan Controller.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-blade-templating-engine","frontmatter":{"published":true,"title":"Laravel 8 - #4 - Blade Templating Engine","tag":"Programming","date":"December 21 2023","excerpt":"Templating Engine adalah sebuah fitur atau tools untuk membantu kita dalam mengelola tampilan halaman web, khususnya untuk sebuah framework dan untuk framework laravel, templating engine nya dinamakan dengan Blade.","cover_image":"/images/posts/Laravel 8 - Blade Templating Engine.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-struktur-folder-routes-dan-view","frontmatter":{"published":true,"title":"Laravel 8 - #3 - Struktur Folder, Routes dan View","tag":"Programming","date":"December 21 2023","excerpt":"Bagaimana struktur folder, routes dan view pada aplikasi Laravel?","cover_image":"/images/posts/Laravel 8 - Struktur Folder, Routes dan View.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-instalasi-dan-konfigurasi","frontmatter":{"published":true,"title":"Laravel 8 - #2 - Instalasi dan Konfigurasi","tag":"Programming","date":"December 20 2023","excerpt":"Bagaimana cara instalasi dan konfigurasi Laravel pada sistem operasi Windows, macOS dan Linux?","cover_image":"/images/posts/Laravel 8 - Instalasi dan Konfigurasi.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"laravel8-apa-itu-laravel","frontmatter":{"published":true,"title":"Laravel 8 - #1 - Apa itu Laravel?","tag":"Programming","date":"December 19 2023","excerpt":"Introduction Laravel 8, apa sih Laravel itu? Apa itu Web Application Framework? Siapa pembuat Laravel? Tujuan Laravel dibuat?","cover_image":"/images/posts/Laravel 8 - Apa itu Laravel.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"git-&-github-menambahkan-ssh-key","frontmatter":{"published":true,"title":"Git & GitHub - Menambahkan SSH Key","tag":"Git","date":"October 31 2023","excerpt":"GitHub saat ini wajib menggunakan SSH Public atau Private keypair untuk melakukan autentikasi dari local (git) ke remote (github), oleh karena itu pada artikel kali ini saya akan membahas bagaimana cara generate SSH key nya.","cover_image":"/images/posts/Git Github - SSH key.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"cloud-computing","frontmatter":{"published":false,"title":"Testing Heading","tag":"Cloud","date":"October 29 2023","excerpt":"Ini adalah testing heading","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"test","frontmatter":{"published":false,"title":"Testing Heading","tag":"Programming","date":"October 29 2023","excerpt":"Ini adalah testing heading","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"typescript-belajar-typescript","frontmatter":{"published":true,"title":"TypeScript - Belajar TypeScript","tag":"Programming","date":"October 16 2023","excerpt":"Pada artikel kali ini, saya akan membahas mengenai typescript","cover_image":"/images/posts/TypeScript - Belajar TypeScript.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"css-belajar-css","frontmatter":{"published":false,"title":"CSS - Belajar CSS","tag":"Programming","date":"October 10 2023","excerpt":"Pada artikel ini Saya akan membahas mengenai CSS seperti anatomi, penempatan dan lainnya","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"sistem-basis-data-1","frontmatter":{"published":false,"title":"Sistem Basis Data - 1","tag":"Programming","date":"October 6 2023","excerpt":"Pada artikel kali ini, saya akan membuat series untuk membahas mengenai Sistem Basis Data","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"cacti-install-cacti-di-ubuntu-server","frontmatter":{"published":true,"title":"Cacti - Instalasi dan Konfigurasi Monitoring Traffic Menggunakan Cacti di Ubuntu Server","tag":"SysAdmin","date":"August 30 2023","excerpt":"Pada artikel ini saya akan melakukan instalasi dan konfigurasi cacti pada sistem operasi Ubuntu Server 22.04","cover_image":"/images/posts/Cacti - Install Cacti di Ubuntu.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"ubuntu-instalasi-dan-konfigurasi-lemp-stack","frontmatter":{"published":false,"title":"Ubuntu - Instalasi dan Konfigurasi LEMP Stack","tag":"Linux","date":"August 30 2023","excerpt":"Pada artikel ini saya akan melakukan instalasi dan konfigurasi LEMP atau Linux, Nginx, MariaDB, dan PHP pada sistem operasi Ubuntu Server 22.04","cover_image":"/images/posts/Ubuntu - Instalasi dan Konfigurasi LEMP Stack.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"monitoring-instalasi-dan-konfigurasi-monitoring-server-menggunakan-grafana-dan-prometheus","frontmatter":{"published":true,"title":"Monitoring - Instalasi dan Konfigurasi Monitoring Server Menggunakan Grafana dan Prometheus","tag":"SysAdmin","date":"August 25 2023","excerpt":"Pada artikel ini saya akan melakukan instalasi dan konfigurasi untuk monitoring server menggunakan Grafana dan Prometheus","cover_image":"/images/posts/Monitoring - Grafana dan Prometheus.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"email-instalasi-dan-konfigurasi-mail-server-dengan-postfix-dovecot-roundcube","frontmatter":{"published":true,"title":"Email - Instalasi dan Konfigurasi Mail Server dengan Postfix, Dovecot dan Roundcube","tag":"SysAdmin","date":"August 23 2023","excerpt":"Pada artikel ini saya akan melakukan instalasi dan konfigurasi untuk mail server menggunakan Postfix, Dovecot dan Roundcube","cover_image":"/images/posts/Email - Instalasi dan Konfigurasi Mail Server dengan Postfix Dovecot dan Roundcube.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"protokol-email-yang-perlu-diketahui","frontmatter":{"published":true,"title":"Email - Protokol Email Yang Wajib Diketahui","tag":"SysAdmin","date":"August 15 2023","excerpt":"Pada artikel ini kita akan membahas protokol email apa saja yang wajib diketahui","cover_image":"/images/posts/Email - Protokol Email Yang Wajib Diketahui.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"powerdns-authoritative-server-sebagai-recursor-untuk-client-dan-melayani-public-domain","frontmatter":{"published":true,"title":"PowerDNS - Authoritative Server Sebagai Recursor Untuk Client dan Melayani Public Domains","tag":"SysAdmin","date":"August 01 2023","excerpt":"Pada artikel ini saya akan melakukan konfigurasi DNS Server (PowerDNS) Authoritative Server agar berfungsi sebagai recursor untuk client dan sekaligus melayani public domains","cover_image":"/images/posts/PowerDNS - Authoritative As Recursor for Clients and serving public domains.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"domain-pointing-ke-vps","frontmatter":{"published":true,"title":"Domain - Pointing ke VPS","tag":"SysAdmin","date":"July 21 2023","excerpt":"Pada artikel ini saya akan melakukan konfigurasi domain dari registrar agar mengarah ke VPS","cover_image":"/images/posts/Domain - Pointing ke VPS.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"powerdns-master-dan-slave","frontmatter":{"published":true,"title":"PowerDNS - Konfigurasi Master dan Slave","tag":"SysAdmin","date":"July 14 2023","excerpt":"Pada artikel ini saya akan melakukan konfigurasi master dan slave pada 2 DNS Server","cover_image":"/images/posts/PowerDNS - Master Slave.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"powerdns-menambahkan-records","frontmatter":{"published":true,"title":"PowerDNS - Menambahkan DNS Records pada DNS Server","tag":"SysAdmin","date":"July 12 2023","excerpt":"Pada artikel ini saya akan menambahkan DNS Records pada DNS Server yang berjalan menggunakan PowerDNS dan backend nya menggunakan MySQL","cover_image":"/images/posts/PowerDNS - Menambahkan Record.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"dns-cara-kerja-dan-jenis-jenis-record","frontmatter":{"published":true,"title":"DNS - Apa itu DNS? Pengertian, Fungsi dan Cara Kerja","tag":"SysAdmin","date":"July 11 2023","excerpt":"Pada artikel ini kita akan membahas apa itu DNS, bagaimana cara kerja DNS dan jenis - jenis record pada DNS","cover_image":"/images/posts/DNS - Jenis Jenis DNS Record.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"powerdns-instalasi","frontmatter":{"published":true,"title":"PowerDNS - Install PowerDNS di Ubuntu Server","tag":"SysAdmin","date":"July 04 2023","excerpt":"Pada artikel ini saya akan membuat langkah - langkah instalasi PowerDNS pada sistem operasi Ubuntu Server","cover_image":"/images/posts/PowerDNS - Install PowerDNS di Ubuntu Server.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"cpanel-error-401","frontmatter":{"published":true,"title":"cPanel - Cara memperbaiki error 401 pada WHM cPanel","tag":"SysAdmin","date":"June 27 2023","excerpt":"Pada artikel ini kita akan melakukan konfigurasi server untuk mengatasi error 401 ketika mengakses WHM cPanel","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"proxmox-installation-process","frontmatter":{"published":true,"title":"Proxmox - #1 Installation Process","tag":"SysAdmin","date":"June 26 2023","excerpt":"Pada artikel ini kita akan melakukan instalasi Proxmox VE","cover_image":"/images/posts/Proxmox - Installation Process.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"ubuntu-server-instalasi-ubuntu-server","frontmatter":{"published":true,"title":"Ubuntu Server - Instalasi Ubuntu Server 22.04","tag":"Linux","date":"June 21 2023","excerpt":"Pada artikel ini kita akan melakukan instalasi pada sistem operasi ubuntu server 22.04","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"powerbeam-m5-400-sebagai-client","frontmatter":{"published":false,"title":"Ubiquiti - PowerBeam M5 400 Sebagai Client (Station Mode)","tag":"Networking","date":"April 23 2023","excerpt":"Pada artikel ini kita akan melakukan konfigurasi pada perangkat antena wireless dari merek Ubiquiti yaitu PowerBeam M5 400 dengan mode station","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"codeigniter-hosting-di-cpanel","frontmatter":{"published":true,"title":"Codeigniter - Hosting di cPanel","tag":"Programming","date":"March 21 2023","excerpt":"Pada artikel ini kita akan melakukan hosting program codeigniter di cPanel","cover_image":"/images/posts/Codeigniter - Hosting di cPanel.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"archlinux-install-xdebug","frontmatter":{"published":true,"title":"Arch Linux - Install Xdebug","tag":"Linux","date":"March 01 2023","excerpt":"Pada artikel ini kita akan melakukan instalasi Xdebug untuk PHP dan berjalan di web server Apache","cover_image":"/images/posts/Arch Linux - Install Xdebug.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"xampp-phpmyadmin-allow-ip-from-remote-access","frontmatter":{"title":"XAMPP - Phpmyadmin Allow Ip From Remote Access","tag":"Setup","date":"Februrary 13 2023","excerpt":"Pada artikel ini kita akan melakukan configurasi phpmyadmin agar dapat diakses melalui ip address","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png","published":true}},{"slug":"codeigniter-configurasi-dasar","frontmatter":{"published":true,"title":"Codeigniter - Configurasi Dasar","tag":"Programming","date":"February 4 2023","excerpt":"Pada artikel ini kita akan melakukan configurasi dasar pada Framework Codeigniter","cover_image":"/images/posts/Codeigniter - Basic Configuration.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"xampp-menambahkan-xdebug","frontmatter":{"published":true,"title":"XAMPP - Menambahkan Xdebug","tag":"Programming","date":"January 25 2023","excerpt":"Pada artikel ini kita akan mencoba menambahkan Xdebug pada configurasi Apache di XAMPP","cover_image":"/images/posts/XAMPP - Install Xdebug.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"archlinux-apache-config-untuk-htaccess","frontmatter":{"published":true,"title":"Arch Linux - Mengaktifkan Mod Rewrite Pada Configurasi Apache","tag":"Linux","date":"January 24 2023","excerpt":"Pada artikel ini kita akan melakukan configurasi apache untuk enable .htaccess","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"php-js-select-option-form-input","frontmatter":{"published":true,"title":"PHP JS - Select Option Form Input","tag":"Programming","date":"January 24 2023","excerpt":"Pada artikel ini kita akan menggabungkan PHP dan JS untuk menangani select option pada form input","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"powershell-install-neovim-dengan-scoop","frontmatter":{"published":true,"title":"PowerShell - Install Neovim Menggunakan Scoop","tag":"Setup","date":"January 24 2023","excerpt":"Pada artikel ini kita akan melakukan instalasi Neovim menggunakan Scoop","cover_image":"/images/posts/neovim.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"powershell-install-oh-my-posh","frontmatter":{"published":true,"title":"PowerShell - Install Oh-My-Posh","tag":"Setup","date":"January 24 2023","excerpt":"Pada artikel ini kita akan melakukan instalasi Oh-My-Posh","cover_image":"/images/posts/ohmyposh.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"olt-command","frontmatter":{"published":true,"title":"OLT - List Perintah atau Command pada OLT","tag":"Networking","date":"January 18 2023","excerpt":"Artikel yang berisi kumpulan perintah atau command untuk perangkat OLT","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"olt-registrasi-onu","frontmatter":{"published":true,"title":"OLT - Registrasi ONU","tag":"Networking","date":"January 18 2023","excerpt":"Pada artikel ini kita akan mencoba melakukan registrasi ONU di OLT","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"php-object-oriented-programming","frontmatter":{"published":true,"title":"PHP - Object Oriented Programming","tag":"Programming","date":"January 18 2023","excerpt":"Object Oriented Programming atau biasa disingkat OOP merupakan sebuah paradigma pada bahasa pemrograman","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"cara-membuat-vlan-pada-interface-router-cisco","frontmatter":{"published":true,"title":"Cisco - Cara Membuat VLAN Pada Interface Router Cisco","tag":"Networking","date":"January 17 2023","excerpt":"Pada artikel ini kita akan mencoba membuat VLAN pada interface router cisco","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"git-&-github-kembali-ke-commit-sebelumnya","frontmatter":{"published":true,"title":"Git - Kembali Ke Commit Sebelumnya","tag":"Git","date":"January 17 2023","excerpt":"Pada artikel ini kita akan mencoba berpindah ke commit sebelumnya pada git","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"git-&-github-multiple-user-account","frontmatter":{"published":true,"title":"Git & GitHub - Multiple User Account","tag":"Git","date":"January 17 2023","excerpt":"Pada artikel ini kita akan melakukan configurasi agar Git & GitHub dapat multiple user akun","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"git-squash-commit","frontmatter":{"published":true,"title":"Git - Squash Commit","tag":"Git","date":"January 17 2023","excerpt":"Pada artikel ini kita akan melakukan Squash pada Commit di Git","cover_image":"/images/posts/default.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"konfigurasi-vlan-access-pada-switch-cisco","frontmatter":{"published":true,"title":"Cisco - Konfigurasi VLAN Access Pada Switch Cisco","tag":"Networking","date":"January 17 2023","excerpt":"Pada artikel ini kita akan melakukan konfigurasi VLAN Access pada Switch Cisco","cover_image":"/images/posts/Cisco - Konfigurasi VLAN Access Pada Switch Cisco.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"konfigurasi-vlan-trunk-pada-switch-cisco","frontmatter":{"published":true,"title":"Cisco - Konfigurasi VLAN Trunk Pada Switch Cisco","tag":"Networking","date":"January 17 2023","excerpt":"Pada artikel ini kita akan melakukan konfigurasi VLAN Trunk pada Switch Cisco","cover_image":"/images/posts/Cisco - Konfigurasi VLAN Trunk Pada Switch Cisco.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}},{"slug":"mikrotik-basic-configuration","frontmatter":{"published":true,"title":"Mikrotik - Basic Configuration","tag":"Networking","date":"January 17 2023","excerpt":"Pada artikel ini kita akan mencoba basic configuration pada Router Mikrotik","cover_image":"/images/posts/Mikrotik - Basic Configuration.png","author_name":"Arman Dwi Pangestu","author_title":"Web Developer","author_image":"/images/posts/author/arman.png"}}]},"__N_SSG":true}